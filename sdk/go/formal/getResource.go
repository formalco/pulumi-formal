// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package formal

import (
	"context"
	"reflect"

	"github.com/formalco/pulumi-formal/sdk/go/formal/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for looking up a Resource by name.
func LookupResource(ctx *pulumi.Context, args *LookupResourceArgs, opts ...pulumi.InvokeOption) (*LookupResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceResult
	err := ctx.Invoke("formal:index/getResource:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResource.
type LookupResourceArgs struct {
	// The name of the Resource.
	Name string `pulumi:"name"`
}

// A collection of values returned by getResource.
type LookupResourceResult struct {
	// Creation time of the Resource.
	CreatedAt int `pulumi:"createdAt"`
	// Environment for the Resource.
	Environment string `pulumi:"environment"`
	// Hostname of the Resource.
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the Resource.
	Name string `pulumi:"name"`
	// The port your Resource is listening on.
	Port int `pulumi:"port"`
	// The ID of the Space the Resource is in.
	SpaceId string `pulumi:"spaceId"`
	// Technology of the Resource.
	Technology string `pulumi:"technology"`
	// If set to true, the Resource cannot be deleted.
	TerminationProtection bool `pulumi:"terminationProtection"`
}

func LookupResourceOutput(ctx *pulumi.Context, args LookupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupResourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupResourceResultOutput, error) {
			args := v.(LookupResourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("formal:index/getResource:getResource", args, LookupResourceResultOutput{}, options).(LookupResourceResultOutput), nil
		}).(LookupResourceResultOutput)
}

// A collection of arguments for invoking getResource.
type LookupResourceOutputArgs struct {
	// The name of the Resource.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceArgs)(nil)).Elem()
}

// A collection of values returned by getResource.
type LookupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceResult)(nil)).Elem()
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutput() LookupResourceResultOutput {
	return o
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutputWithContext(ctx context.Context) LookupResourceResultOutput {
	return o
}

// Creation time of the Resource.
func (o LookupResourceResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourceResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

// Environment for the Resource.
func (o LookupResourceResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Environment }).(pulumi.StringOutput)
}

// Hostname of the Resource.
func (o LookupResourceResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Resource.
func (o LookupResourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The port your Resource is listening on.
func (o LookupResourceResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourceResult) int { return v.Port }).(pulumi.IntOutput)
}

// The ID of the Space the Resource is in.
func (o LookupResourceResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

// Technology of the Resource.
func (o LookupResourceResultOutput) Technology() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Technology }).(pulumi.StringOutput)
}

// If set to true, the Resource cannot be deleted.
func (o LookupResourceResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupResourceResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceResultOutput{})
}
