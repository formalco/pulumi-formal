// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package formal

import (
	"context"
	"reflect"

	"errors"
	"github.com/formalco/pulumi-formal/sdk/go/formal/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Registering a Cloud integration.
type IntegrationCloud struct {
	pulumi.CustomResourceState

	// Configuration block for AWS integration.
	Aws IntegrationCloudAwsPtrOutput `pulumi:"aws"`
	// Whether AWS S3 access is allowed or not.
	AwsAllowS3Access pulumi.BoolOutput `pulumi:"awsAllowS3Access"`
	// Whether AWS EC2 autodiscovery is enabled or not.
	AwsEnableEc2Autodiscovery pulumi.BoolOutput `pulumi:"awsEnableEc2Autodiscovery"`
	// Whether AWS ECS autodiscovery is enabled or not.
	AwsEnableEcsAutodiscovery pulumi.BoolOutput `pulumi:"awsEnableEcsAutodiscovery"`
	// Whether AWS EKS autodiscovery is enabled or not.
	AwsEnableEksAutodiscovery pulumi.BoolOutput `pulumi:"awsEnableEksAutodiscovery"`
	// Whether AWS RDS autodiscovery is enabled or not.
	AwsEnableRdsAutodiscovery pulumi.BoolOutput `pulumi:"awsEnableRdsAutodiscovery"`
	// Whether AWS Redshift autodiscovery is enabled or not.
	AwsEnableRedshiftAutodiscovery pulumi.BoolOutput `pulumi:"awsEnableRedshiftAutodiscovery"`
	// The IAM role ID Formal will use to access your resources.
	AwsFormalIamRole pulumi.StringOutput `pulumi:"awsFormalIamRole"`
	// The SNS topic ARN CloudFormation can use to send events to Formal.
	AwsFormalPingbackArn pulumi.StringOutput `pulumi:"awsFormalPingbackArn"`
	// A generated name for your CloudFormation stack.
	AwsFormalStackName pulumi.StringOutput `pulumi:"awsFormalStackName"`
	// The AWS S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations, if it is allowed to access S3.
	AwsS3BucketArn pulumi.StringOutput `pulumi:"awsS3BucketArn"`
	// The template body of the CloudFormation stack.
	AwsTemplateBody pulumi.StringOutput `pulumi:"awsTemplateBody"`
	// Region of the cloud provider.
	CloudRegion pulumi.StringOutput `pulumi:"cloudRegion"`
	// Name of the Integration.
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of the Integration. (Supported: aws)
	//
	// Deprecated: This field is deprecated and will be removed in a future version.
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewIntegrationCloud registers a new resource with the given unique name, arguments, and options.
func NewIntegrationCloud(ctx *pulumi.Context,
	name string, args *IntegrationCloudArgs, opts ...pulumi.ResourceOption) (*IntegrationCloud, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudRegion == nil {
		return nil, errors.New("invalid value for required argument 'CloudRegion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntegrationCloud
	err := ctx.RegisterResource("formal:index/integrationCloud:IntegrationCloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationCloud gets an existing IntegrationCloud resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationCloud(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationCloudState, opts ...pulumi.ResourceOption) (*IntegrationCloud, error) {
	var resource IntegrationCloud
	err := ctx.ReadResource("formal:index/integrationCloud:IntegrationCloud", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationCloud resources.
type integrationCloudState struct {
	// Configuration block for AWS integration.
	Aws *IntegrationCloudAws `pulumi:"aws"`
	// Whether AWS S3 access is allowed or not.
	AwsAllowS3Access *bool `pulumi:"awsAllowS3Access"`
	// Whether AWS EC2 autodiscovery is enabled or not.
	AwsEnableEc2Autodiscovery *bool `pulumi:"awsEnableEc2Autodiscovery"`
	// Whether AWS ECS autodiscovery is enabled or not.
	AwsEnableEcsAutodiscovery *bool `pulumi:"awsEnableEcsAutodiscovery"`
	// Whether AWS EKS autodiscovery is enabled or not.
	AwsEnableEksAutodiscovery *bool `pulumi:"awsEnableEksAutodiscovery"`
	// Whether AWS RDS autodiscovery is enabled or not.
	AwsEnableRdsAutodiscovery *bool `pulumi:"awsEnableRdsAutodiscovery"`
	// Whether AWS Redshift autodiscovery is enabled or not.
	AwsEnableRedshiftAutodiscovery *bool `pulumi:"awsEnableRedshiftAutodiscovery"`
	// The IAM role ID Formal will use to access your resources.
	AwsFormalIamRole *string `pulumi:"awsFormalIamRole"`
	// The SNS topic ARN CloudFormation can use to send events to Formal.
	AwsFormalPingbackArn *string `pulumi:"awsFormalPingbackArn"`
	// A generated name for your CloudFormation stack.
	AwsFormalStackName *string `pulumi:"awsFormalStackName"`
	// The AWS S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations, if it is allowed to access S3.
	AwsS3BucketArn *string `pulumi:"awsS3BucketArn"`
	// The template body of the CloudFormation stack.
	AwsTemplateBody *string `pulumi:"awsTemplateBody"`
	// Region of the cloud provider.
	CloudRegion *string `pulumi:"cloudRegion"`
	// Name of the Integration.
	Name *string `pulumi:"name"`
	// Type of the Integration. (Supported: aws)
	//
	// Deprecated: This field is deprecated and will be removed in a future version.
	Type *string `pulumi:"type"`
}

type IntegrationCloudState struct {
	// Configuration block for AWS integration.
	Aws IntegrationCloudAwsPtrInput
	// Whether AWS S3 access is allowed or not.
	AwsAllowS3Access pulumi.BoolPtrInput
	// Whether AWS EC2 autodiscovery is enabled or not.
	AwsEnableEc2Autodiscovery pulumi.BoolPtrInput
	// Whether AWS ECS autodiscovery is enabled or not.
	AwsEnableEcsAutodiscovery pulumi.BoolPtrInput
	// Whether AWS EKS autodiscovery is enabled or not.
	AwsEnableEksAutodiscovery pulumi.BoolPtrInput
	// Whether AWS RDS autodiscovery is enabled or not.
	AwsEnableRdsAutodiscovery pulumi.BoolPtrInput
	// Whether AWS Redshift autodiscovery is enabled or not.
	AwsEnableRedshiftAutodiscovery pulumi.BoolPtrInput
	// The IAM role ID Formal will use to access your resources.
	AwsFormalIamRole pulumi.StringPtrInput
	// The SNS topic ARN CloudFormation can use to send events to Formal.
	AwsFormalPingbackArn pulumi.StringPtrInput
	// A generated name for your CloudFormation stack.
	AwsFormalStackName pulumi.StringPtrInput
	// The AWS S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations, if it is allowed to access S3.
	AwsS3BucketArn pulumi.StringPtrInput
	// The template body of the CloudFormation stack.
	AwsTemplateBody pulumi.StringPtrInput
	// Region of the cloud provider.
	CloudRegion pulumi.StringPtrInput
	// Name of the Integration.
	Name pulumi.StringPtrInput
	// Type of the Integration. (Supported: aws)
	//
	// Deprecated: This field is deprecated and will be removed in a future version.
	Type pulumi.StringPtrInput
}

func (IntegrationCloudState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationCloudState)(nil)).Elem()
}

type integrationCloudArgs struct {
	// Configuration block for AWS integration.
	Aws *IntegrationCloudAws `pulumi:"aws"`
	// Region of the cloud provider.
	CloudRegion string `pulumi:"cloudRegion"`
	// Name of the Integration.
	Name *string `pulumi:"name"`
	// Type of the Integration. (Supported: aws)
	//
	// Deprecated: This field is deprecated and will be removed in a future version.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a IntegrationCloud resource.
type IntegrationCloudArgs struct {
	// Configuration block for AWS integration.
	Aws IntegrationCloudAwsPtrInput
	// Region of the cloud provider.
	CloudRegion pulumi.StringInput
	// Name of the Integration.
	Name pulumi.StringPtrInput
	// Type of the Integration. (Supported: aws)
	//
	// Deprecated: This field is deprecated and will be removed in a future version.
	Type pulumi.StringPtrInput
}

func (IntegrationCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationCloudArgs)(nil)).Elem()
}

type IntegrationCloudInput interface {
	pulumi.Input

	ToIntegrationCloudOutput() IntegrationCloudOutput
	ToIntegrationCloudOutputWithContext(ctx context.Context) IntegrationCloudOutput
}

func (*IntegrationCloud) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationCloud)(nil)).Elem()
}

func (i *IntegrationCloud) ToIntegrationCloudOutput() IntegrationCloudOutput {
	return i.ToIntegrationCloudOutputWithContext(context.Background())
}

func (i *IntegrationCloud) ToIntegrationCloudOutputWithContext(ctx context.Context) IntegrationCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationCloudOutput)
}

// IntegrationCloudArrayInput is an input type that accepts IntegrationCloudArray and IntegrationCloudArrayOutput values.
// You can construct a concrete instance of `IntegrationCloudArrayInput` via:
//
//	IntegrationCloudArray{ IntegrationCloudArgs{...} }
type IntegrationCloudArrayInput interface {
	pulumi.Input

	ToIntegrationCloudArrayOutput() IntegrationCloudArrayOutput
	ToIntegrationCloudArrayOutputWithContext(context.Context) IntegrationCloudArrayOutput
}

type IntegrationCloudArray []IntegrationCloudInput

func (IntegrationCloudArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationCloud)(nil)).Elem()
}

func (i IntegrationCloudArray) ToIntegrationCloudArrayOutput() IntegrationCloudArrayOutput {
	return i.ToIntegrationCloudArrayOutputWithContext(context.Background())
}

func (i IntegrationCloudArray) ToIntegrationCloudArrayOutputWithContext(ctx context.Context) IntegrationCloudArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationCloudArrayOutput)
}

// IntegrationCloudMapInput is an input type that accepts IntegrationCloudMap and IntegrationCloudMapOutput values.
// You can construct a concrete instance of `IntegrationCloudMapInput` via:
//
//	IntegrationCloudMap{ "key": IntegrationCloudArgs{...} }
type IntegrationCloudMapInput interface {
	pulumi.Input

	ToIntegrationCloudMapOutput() IntegrationCloudMapOutput
	ToIntegrationCloudMapOutputWithContext(context.Context) IntegrationCloudMapOutput
}

type IntegrationCloudMap map[string]IntegrationCloudInput

func (IntegrationCloudMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationCloud)(nil)).Elem()
}

func (i IntegrationCloudMap) ToIntegrationCloudMapOutput() IntegrationCloudMapOutput {
	return i.ToIntegrationCloudMapOutputWithContext(context.Background())
}

func (i IntegrationCloudMap) ToIntegrationCloudMapOutputWithContext(ctx context.Context) IntegrationCloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationCloudMapOutput)
}

type IntegrationCloudOutput struct{ *pulumi.OutputState }

func (IntegrationCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationCloud)(nil)).Elem()
}

func (o IntegrationCloudOutput) ToIntegrationCloudOutput() IntegrationCloudOutput {
	return o
}

func (o IntegrationCloudOutput) ToIntegrationCloudOutputWithContext(ctx context.Context) IntegrationCloudOutput {
	return o
}

// Configuration block for AWS integration.
func (o IntegrationCloudOutput) Aws() IntegrationCloudAwsPtrOutput {
	return o.ApplyT(func(v *IntegrationCloud) IntegrationCloudAwsPtrOutput { return v.Aws }).(IntegrationCloudAwsPtrOutput)
}

// Whether AWS S3 access is allowed or not.
func (o IntegrationCloudOutput) AwsAllowS3Access() pulumi.BoolOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.BoolOutput { return v.AwsAllowS3Access }).(pulumi.BoolOutput)
}

// Whether AWS EC2 autodiscovery is enabled or not.
func (o IntegrationCloudOutput) AwsEnableEc2Autodiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.BoolOutput { return v.AwsEnableEc2Autodiscovery }).(pulumi.BoolOutput)
}

// Whether AWS ECS autodiscovery is enabled or not.
func (o IntegrationCloudOutput) AwsEnableEcsAutodiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.BoolOutput { return v.AwsEnableEcsAutodiscovery }).(pulumi.BoolOutput)
}

// Whether AWS EKS autodiscovery is enabled or not.
func (o IntegrationCloudOutput) AwsEnableEksAutodiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.BoolOutput { return v.AwsEnableEksAutodiscovery }).(pulumi.BoolOutput)
}

// Whether AWS RDS autodiscovery is enabled or not.
func (o IntegrationCloudOutput) AwsEnableRdsAutodiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.BoolOutput { return v.AwsEnableRdsAutodiscovery }).(pulumi.BoolOutput)
}

// Whether AWS Redshift autodiscovery is enabled or not.
func (o IntegrationCloudOutput) AwsEnableRedshiftAutodiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.BoolOutput { return v.AwsEnableRedshiftAutodiscovery }).(pulumi.BoolOutput)
}

// The IAM role ID Formal will use to access your resources.
func (o IntegrationCloudOutput) AwsFormalIamRole() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.AwsFormalIamRole }).(pulumi.StringOutput)
}

// The SNS topic ARN CloudFormation can use to send events to Formal.
func (o IntegrationCloudOutput) AwsFormalPingbackArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.AwsFormalPingbackArn }).(pulumi.StringOutput)
}

// A generated name for your CloudFormation stack.
func (o IntegrationCloudOutput) AwsFormalStackName() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.AwsFormalStackName }).(pulumi.StringOutput)
}

// The AWS S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations, if it is allowed to access S3.
func (o IntegrationCloudOutput) AwsS3BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.AwsS3BucketArn }).(pulumi.StringOutput)
}

// The template body of the CloudFormation stack.
func (o IntegrationCloudOutput) AwsTemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.AwsTemplateBody }).(pulumi.StringOutput)
}

// Region of the cloud provider.
func (o IntegrationCloudOutput) CloudRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.CloudRegion }).(pulumi.StringOutput)
}

// Name of the Integration.
func (o IntegrationCloudOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Type of the Integration. (Supported: aws)
//
// Deprecated: This field is deprecated and will be removed in a future version.
func (o IntegrationCloudOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationCloud) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type IntegrationCloudArrayOutput struct{ *pulumi.OutputState }

func (IntegrationCloudArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationCloud)(nil)).Elem()
}

func (o IntegrationCloudArrayOutput) ToIntegrationCloudArrayOutput() IntegrationCloudArrayOutput {
	return o
}

func (o IntegrationCloudArrayOutput) ToIntegrationCloudArrayOutputWithContext(ctx context.Context) IntegrationCloudArrayOutput {
	return o
}

func (o IntegrationCloudArrayOutput) Index(i pulumi.IntInput) IntegrationCloudOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntegrationCloud {
		return vs[0].([]*IntegrationCloud)[vs[1].(int)]
	}).(IntegrationCloudOutput)
}

type IntegrationCloudMapOutput struct{ *pulumi.OutputState }

func (IntegrationCloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationCloud)(nil)).Elem()
}

func (o IntegrationCloudMapOutput) ToIntegrationCloudMapOutput() IntegrationCloudMapOutput {
	return o
}

func (o IntegrationCloudMapOutput) ToIntegrationCloudMapOutputWithContext(ctx context.Context) IntegrationCloudMapOutput {
	return o
}

func (o IntegrationCloudMapOutput) MapIndex(k pulumi.StringInput) IntegrationCloudOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntegrationCloud {
		return vs[0].(map[string]*IntegrationCloud)[vs[1].(string)]
	}).(IntegrationCloudOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationCloudInput)(nil)).Elem(), &IntegrationCloud{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationCloudArrayInput)(nil)).Elem(), IntegrationCloudArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationCloudMapInput)(nil)).Elem(), IntegrationCloudMap{})
	pulumi.RegisterOutputType(IntegrationCloudOutput{})
	pulumi.RegisterOutputType(IntegrationCloudArrayOutput{})
	pulumi.RegisterOutputType(IntegrationCloudMapOutput{})
}
