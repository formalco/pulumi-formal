// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package formal

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/formalco/pulumi-formal/sdk/go/formal/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "formal:index/connector:Connector":
		r = &Connector{}
	case "formal:index/connectorConfiguration:ConnectorConfiguration":
		r = &ConnectorConfiguration{}
	case "formal:index/connectorHostname:ConnectorHostname":
		r = &ConnectorHostname{}
	case "formal:index/connectorListener:ConnectorListener":
		r = &ConnectorListener{}
	case "formal:index/connectorListenerLink:ConnectorListenerLink":
		r = &ConnectorListenerLink{}
	case "formal:index/connectorListenerRule:ConnectorListenerRule":
		r = &ConnectorListenerRule{}
	case "formal:index/dataDiscovery:DataDiscovery":
		r = &DataDiscovery{}
	case "formal:index/dataDomain:DataDomain":
		r = &DataDomain{}
	case "formal:index/dataLabel:DataLabel":
		r = &DataLabel{}
	case "formal:index/encryptionKey:EncryptionKey":
		r = &EncryptionKey{}
	case "formal:index/group:Group":
		r = &Group{}
	case "formal:index/groupUserLink:GroupUserLink":
		r = &GroupUserLink{}
	case "formal:index/integrationBi:IntegrationBi":
		r = &IntegrationBi{}
	case "formal:index/integrationCloud:IntegrationCloud":
		r = &IntegrationCloud{}
	case "formal:index/integrationDataCatalog:IntegrationDataCatalog":
		r = &IntegrationDataCatalog{}
	case "formal:index/integrationLog:IntegrationLog":
		r = &IntegrationLog{}
	case "formal:index/integrationMdm:IntegrationMdm":
		r = &IntegrationMdm{}
	case "formal:index/integrationMfa:IntegrationMfa":
		r = &IntegrationMfa{}
	case "formal:index/inventoryObjectDataLabelLink:InventoryObjectDataLabelLink":
		r = &InventoryObjectDataLabelLink{}
	case "formal:index/logConfiguration:LogConfiguration":
		r = &LogConfiguration{}
	case "formal:index/nativeUser:NativeUser":
		r = &NativeUser{}
	case "formal:index/nativeUserLink:NativeUserLink":
		r = &NativeUserLink{}
	case "formal:index/permission:Permission":
		r = &Permission{}
	case "formal:index/policy:Policy":
		r = &Policy{}
	case "formal:index/policyDataLoader:PolicyDataLoader":
		r = &PolicyDataLoader{}
	case "formal:index/resource:Resource":
		r = &Resource{}
	case "formal:index/resourceClassifierConfiguration:ResourceClassifierConfiguration":
		r = &ResourceClassifierConfiguration{}
	case "formal:index/resourceHealthCheck:ResourceHealthCheck":
		r = &ResourceHealthCheck{}
	case "formal:index/resourceHostname:ResourceHostname":
		r = &ResourceHostname{}
	case "formal:index/resourceTlsConfiguration:ResourceTlsConfiguration":
		r = &ResourceTlsConfiguration{}
	case "formal:index/satellite:Satellite":
		r = &Satellite{}
	case "formal:index/sidecar:Sidecar":
		r = &Sidecar{}
	case "formal:index/sidecarResourceLink:SidecarResourceLink":
		r = &SidecarResourceLink{}
	case "formal:index/space:Space":
		r = &Space{}
	case "formal:index/tracker:Tracker":
		r = &Tracker{}
	case "formal:index/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:formal" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"formal",
		"index/connector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/connectorConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/connectorHostname",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/connectorListener",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/connectorListenerLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/connectorListenerRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/dataDiscovery",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/dataDomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/dataLabel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/encryptionKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/group",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/groupUserLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/integrationBi",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/integrationCloud",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/integrationDataCatalog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/integrationLog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/integrationMdm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/integrationMfa",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/inventoryObjectDataLabelLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/logConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/nativeUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/nativeUserLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/permission",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/policyDataLoader",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/resource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/resourceClassifierConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/resourceHealthCheck",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/resourceHostname",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/resourceTlsConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/satellite",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/sidecar",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/sidecarResourceLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/space",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/tracker",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"formal",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"formal",
		&pkg{version},
	)
}
