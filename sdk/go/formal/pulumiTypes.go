// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package formal

import (
	"context"
	"reflect"

	"github.com/formalco/pulumi-formal/sdk/go/formal/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataDomainOwner struct {
	ObjectId   string `pulumi:"objectId"`
	ObjectType string `pulumi:"objectType"`
}

// DataDomainOwnerInput is an input type that accepts DataDomainOwnerArgs and DataDomainOwnerOutput values.
// You can construct a concrete instance of `DataDomainOwnerInput` via:
//
//	DataDomainOwnerArgs{...}
type DataDomainOwnerInput interface {
	pulumi.Input

	ToDataDomainOwnerOutput() DataDomainOwnerOutput
	ToDataDomainOwnerOutputWithContext(context.Context) DataDomainOwnerOutput
}

type DataDomainOwnerArgs struct {
	ObjectId   pulumi.StringInput `pulumi:"objectId"`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (DataDomainOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDomainOwner)(nil)).Elem()
}

func (i DataDomainOwnerArgs) ToDataDomainOwnerOutput() DataDomainOwnerOutput {
	return i.ToDataDomainOwnerOutputWithContext(context.Background())
}

func (i DataDomainOwnerArgs) ToDataDomainOwnerOutputWithContext(ctx context.Context) DataDomainOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDomainOwnerOutput)
}

// DataDomainOwnerArrayInput is an input type that accepts DataDomainOwnerArray and DataDomainOwnerArrayOutput values.
// You can construct a concrete instance of `DataDomainOwnerArrayInput` via:
//
//	DataDomainOwnerArray{ DataDomainOwnerArgs{...} }
type DataDomainOwnerArrayInput interface {
	pulumi.Input

	ToDataDomainOwnerArrayOutput() DataDomainOwnerArrayOutput
	ToDataDomainOwnerArrayOutputWithContext(context.Context) DataDomainOwnerArrayOutput
}

type DataDomainOwnerArray []DataDomainOwnerInput

func (DataDomainOwnerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDomainOwner)(nil)).Elem()
}

func (i DataDomainOwnerArray) ToDataDomainOwnerArrayOutput() DataDomainOwnerArrayOutput {
	return i.ToDataDomainOwnerArrayOutputWithContext(context.Background())
}

func (i DataDomainOwnerArray) ToDataDomainOwnerArrayOutputWithContext(ctx context.Context) DataDomainOwnerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDomainOwnerArrayOutput)
}

type DataDomainOwnerOutput struct{ *pulumi.OutputState }

func (DataDomainOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDomainOwner)(nil)).Elem()
}

func (o DataDomainOwnerOutput) ToDataDomainOwnerOutput() DataDomainOwnerOutput {
	return o
}

func (o DataDomainOwnerOutput) ToDataDomainOwnerOutputWithContext(ctx context.Context) DataDomainOwnerOutput {
	return o
}

func (o DataDomainOwnerOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v DataDomainOwner) string { return v.ObjectId }).(pulumi.StringOutput)
}

func (o DataDomainOwnerOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v DataDomainOwner) string { return v.ObjectType }).(pulumi.StringOutput)
}

type DataDomainOwnerArrayOutput struct{ *pulumi.OutputState }

func (DataDomainOwnerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDomainOwner)(nil)).Elem()
}

func (o DataDomainOwnerArrayOutput) ToDataDomainOwnerArrayOutput() DataDomainOwnerArrayOutput {
	return o
}

func (o DataDomainOwnerArrayOutput) ToDataDomainOwnerArrayOutputWithContext(ctx context.Context) DataDomainOwnerArrayOutput {
	return o
}

func (o DataDomainOwnerArrayOutput) Index(i pulumi.IntInput) DataDomainOwnerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDomainOwner {
		return vs[0].([]DataDomainOwner)[vs[1].(int)]
	}).(DataDomainOwnerOutput)
}

type IntegrationBiMetabase struct {
	// Hostname of the Metabase instance.
	Hostname string `pulumi:"hostname"`
	// Password for the Metabase instance.
	Password string `pulumi:"password"`
	// Username for the Metabase instance.
	Username string `pulumi:"username"`
}

// IntegrationBiMetabaseInput is an input type that accepts IntegrationBiMetabaseArgs and IntegrationBiMetabaseOutput values.
// You can construct a concrete instance of `IntegrationBiMetabaseInput` via:
//
//	IntegrationBiMetabaseArgs{...}
type IntegrationBiMetabaseInput interface {
	pulumi.Input

	ToIntegrationBiMetabaseOutput() IntegrationBiMetabaseOutput
	ToIntegrationBiMetabaseOutputWithContext(context.Context) IntegrationBiMetabaseOutput
}

type IntegrationBiMetabaseArgs struct {
	// Hostname of the Metabase instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// Password for the Metabase instance.
	Password pulumi.StringInput `pulumi:"password"`
	// Username for the Metabase instance.
	Username pulumi.StringInput `pulumi:"username"`
}

func (IntegrationBiMetabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationBiMetabase)(nil)).Elem()
}

func (i IntegrationBiMetabaseArgs) ToIntegrationBiMetabaseOutput() IntegrationBiMetabaseOutput {
	return i.ToIntegrationBiMetabaseOutputWithContext(context.Background())
}

func (i IntegrationBiMetabaseArgs) ToIntegrationBiMetabaseOutputWithContext(ctx context.Context) IntegrationBiMetabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationBiMetabaseOutput)
}

func (i IntegrationBiMetabaseArgs) ToIntegrationBiMetabasePtrOutput() IntegrationBiMetabasePtrOutput {
	return i.ToIntegrationBiMetabasePtrOutputWithContext(context.Background())
}

func (i IntegrationBiMetabaseArgs) ToIntegrationBiMetabasePtrOutputWithContext(ctx context.Context) IntegrationBiMetabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationBiMetabaseOutput).ToIntegrationBiMetabasePtrOutputWithContext(ctx)
}

// IntegrationBiMetabasePtrInput is an input type that accepts IntegrationBiMetabaseArgs, IntegrationBiMetabasePtr and IntegrationBiMetabasePtrOutput values.
// You can construct a concrete instance of `IntegrationBiMetabasePtrInput` via:
//
//	        IntegrationBiMetabaseArgs{...}
//
//	or:
//
//	        nil
type IntegrationBiMetabasePtrInput interface {
	pulumi.Input

	ToIntegrationBiMetabasePtrOutput() IntegrationBiMetabasePtrOutput
	ToIntegrationBiMetabasePtrOutputWithContext(context.Context) IntegrationBiMetabasePtrOutput
}

type integrationBiMetabasePtrType IntegrationBiMetabaseArgs

func IntegrationBiMetabasePtr(v *IntegrationBiMetabaseArgs) IntegrationBiMetabasePtrInput {
	return (*integrationBiMetabasePtrType)(v)
}

func (*integrationBiMetabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationBiMetabase)(nil)).Elem()
}

func (i *integrationBiMetabasePtrType) ToIntegrationBiMetabasePtrOutput() IntegrationBiMetabasePtrOutput {
	return i.ToIntegrationBiMetabasePtrOutputWithContext(context.Background())
}

func (i *integrationBiMetabasePtrType) ToIntegrationBiMetabasePtrOutputWithContext(ctx context.Context) IntegrationBiMetabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationBiMetabasePtrOutput)
}

type IntegrationBiMetabaseOutput struct{ *pulumi.OutputState }

func (IntegrationBiMetabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationBiMetabase)(nil)).Elem()
}

func (o IntegrationBiMetabaseOutput) ToIntegrationBiMetabaseOutput() IntegrationBiMetabaseOutput {
	return o
}

func (o IntegrationBiMetabaseOutput) ToIntegrationBiMetabaseOutputWithContext(ctx context.Context) IntegrationBiMetabaseOutput {
	return o
}

func (o IntegrationBiMetabaseOutput) ToIntegrationBiMetabasePtrOutput() IntegrationBiMetabasePtrOutput {
	return o.ToIntegrationBiMetabasePtrOutputWithContext(context.Background())
}

func (o IntegrationBiMetabaseOutput) ToIntegrationBiMetabasePtrOutputWithContext(ctx context.Context) IntegrationBiMetabasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationBiMetabase) *IntegrationBiMetabase {
		return &v
	}).(IntegrationBiMetabasePtrOutput)
}

// Hostname of the Metabase instance.
func (o IntegrationBiMetabaseOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationBiMetabase) string { return v.Hostname }).(pulumi.StringOutput)
}

// Password for the Metabase instance.
func (o IntegrationBiMetabaseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationBiMetabase) string { return v.Password }).(pulumi.StringOutput)
}

// Username for the Metabase instance.
func (o IntegrationBiMetabaseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationBiMetabase) string { return v.Username }).(pulumi.StringOutput)
}

type IntegrationBiMetabasePtrOutput struct{ *pulumi.OutputState }

func (IntegrationBiMetabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationBiMetabase)(nil)).Elem()
}

func (o IntegrationBiMetabasePtrOutput) ToIntegrationBiMetabasePtrOutput() IntegrationBiMetabasePtrOutput {
	return o
}

func (o IntegrationBiMetabasePtrOutput) ToIntegrationBiMetabasePtrOutputWithContext(ctx context.Context) IntegrationBiMetabasePtrOutput {
	return o
}

func (o IntegrationBiMetabasePtrOutput) Elem() IntegrationBiMetabaseOutput {
	return o.ApplyT(func(v *IntegrationBiMetabase) IntegrationBiMetabase {
		if v != nil {
			return *v
		}
		var ret IntegrationBiMetabase
		return ret
	}).(IntegrationBiMetabaseOutput)
}

// Hostname of the Metabase instance.
func (o IntegrationBiMetabasePtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationBiMetabase) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

// Password for the Metabase instance.
func (o IntegrationBiMetabasePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationBiMetabase) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Username for the Metabase instance.
func (o IntegrationBiMetabasePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationBiMetabase) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type IntegrationCloudAws struct {
	// Allows the Cloud Integration to access S3 buckets for Log Integrations.
	AllowS3Access *bool `pulumi:"allowS3Access"`
	// The ARN of the IAM role that Formal assumes in your AWS account to access your resources.
	AwsCustomerRoleArn *string `pulumi:"awsCustomerRoleArn"`
	// Enables resource autodiscovery for EC2 instances.
	EnableEc2Autodiscovery *bool `pulumi:"enableEc2Autodiscovery"`
	// Enables resource autodiscovery for ECS clusters.
	EnableEcsAutodiscovery *bool `pulumi:"enableEcsAutodiscovery"`
	// Enables resource autodiscovery for EKS clusters.
	EnableEksAutodiscovery *bool `pulumi:"enableEksAutodiscovery"`
	// Enables resource autodiscovery for RDS instances (PostgreSQL, MySQL, MongoDB).
	EnableRdsAutodiscovery *bool `pulumi:"enableRdsAutodiscovery"`
	// Enables resource autodiscovery for Redshift clusters.
	EnableRedshiftAutodiscovery *bool `pulumi:"enableRedshiftAutodiscovery"`
	// The S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations.
	S3BucketArn *string `pulumi:"s3BucketArn"`
	// The template version of the CloudFormation stack. Use `latest` to stay in sync.
	TemplateVersion string `pulumi:"templateVersion"`
}

// IntegrationCloudAwsInput is an input type that accepts IntegrationCloudAwsArgs and IntegrationCloudAwsOutput values.
// You can construct a concrete instance of `IntegrationCloudAwsInput` via:
//
//	IntegrationCloudAwsArgs{...}
type IntegrationCloudAwsInput interface {
	pulumi.Input

	ToIntegrationCloudAwsOutput() IntegrationCloudAwsOutput
	ToIntegrationCloudAwsOutputWithContext(context.Context) IntegrationCloudAwsOutput
}

type IntegrationCloudAwsArgs struct {
	// Allows the Cloud Integration to access S3 buckets for Log Integrations.
	AllowS3Access pulumi.BoolPtrInput `pulumi:"allowS3Access"`
	// The ARN of the IAM role that Formal assumes in your AWS account to access your resources.
	AwsCustomerRoleArn pulumi.StringPtrInput `pulumi:"awsCustomerRoleArn"`
	// Enables resource autodiscovery for EC2 instances.
	EnableEc2Autodiscovery pulumi.BoolPtrInput `pulumi:"enableEc2Autodiscovery"`
	// Enables resource autodiscovery for ECS clusters.
	EnableEcsAutodiscovery pulumi.BoolPtrInput `pulumi:"enableEcsAutodiscovery"`
	// Enables resource autodiscovery for EKS clusters.
	EnableEksAutodiscovery pulumi.BoolPtrInput `pulumi:"enableEksAutodiscovery"`
	// Enables resource autodiscovery for RDS instances (PostgreSQL, MySQL, MongoDB).
	EnableRdsAutodiscovery pulumi.BoolPtrInput `pulumi:"enableRdsAutodiscovery"`
	// Enables resource autodiscovery for Redshift clusters.
	EnableRedshiftAutodiscovery pulumi.BoolPtrInput `pulumi:"enableRedshiftAutodiscovery"`
	// The S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations.
	S3BucketArn pulumi.StringPtrInput `pulumi:"s3BucketArn"`
	// The template version of the CloudFormation stack. Use `latest` to stay in sync.
	TemplateVersion pulumi.StringInput `pulumi:"templateVersion"`
}

func (IntegrationCloudAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationCloudAws)(nil)).Elem()
}

func (i IntegrationCloudAwsArgs) ToIntegrationCloudAwsOutput() IntegrationCloudAwsOutput {
	return i.ToIntegrationCloudAwsOutputWithContext(context.Background())
}

func (i IntegrationCloudAwsArgs) ToIntegrationCloudAwsOutputWithContext(ctx context.Context) IntegrationCloudAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationCloudAwsOutput)
}

func (i IntegrationCloudAwsArgs) ToIntegrationCloudAwsPtrOutput() IntegrationCloudAwsPtrOutput {
	return i.ToIntegrationCloudAwsPtrOutputWithContext(context.Background())
}

func (i IntegrationCloudAwsArgs) ToIntegrationCloudAwsPtrOutputWithContext(ctx context.Context) IntegrationCloudAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationCloudAwsOutput).ToIntegrationCloudAwsPtrOutputWithContext(ctx)
}

// IntegrationCloudAwsPtrInput is an input type that accepts IntegrationCloudAwsArgs, IntegrationCloudAwsPtr and IntegrationCloudAwsPtrOutput values.
// You can construct a concrete instance of `IntegrationCloudAwsPtrInput` via:
//
//	        IntegrationCloudAwsArgs{...}
//
//	or:
//
//	        nil
type IntegrationCloudAwsPtrInput interface {
	pulumi.Input

	ToIntegrationCloudAwsPtrOutput() IntegrationCloudAwsPtrOutput
	ToIntegrationCloudAwsPtrOutputWithContext(context.Context) IntegrationCloudAwsPtrOutput
}

type integrationCloudAwsPtrType IntegrationCloudAwsArgs

func IntegrationCloudAwsPtr(v *IntegrationCloudAwsArgs) IntegrationCloudAwsPtrInput {
	return (*integrationCloudAwsPtrType)(v)
}

func (*integrationCloudAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationCloudAws)(nil)).Elem()
}

func (i *integrationCloudAwsPtrType) ToIntegrationCloudAwsPtrOutput() IntegrationCloudAwsPtrOutput {
	return i.ToIntegrationCloudAwsPtrOutputWithContext(context.Background())
}

func (i *integrationCloudAwsPtrType) ToIntegrationCloudAwsPtrOutputWithContext(ctx context.Context) IntegrationCloudAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationCloudAwsPtrOutput)
}

type IntegrationCloudAwsOutput struct{ *pulumi.OutputState }

func (IntegrationCloudAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationCloudAws)(nil)).Elem()
}

func (o IntegrationCloudAwsOutput) ToIntegrationCloudAwsOutput() IntegrationCloudAwsOutput {
	return o
}

func (o IntegrationCloudAwsOutput) ToIntegrationCloudAwsOutputWithContext(ctx context.Context) IntegrationCloudAwsOutput {
	return o
}

func (o IntegrationCloudAwsOutput) ToIntegrationCloudAwsPtrOutput() IntegrationCloudAwsPtrOutput {
	return o.ToIntegrationCloudAwsPtrOutputWithContext(context.Background())
}

func (o IntegrationCloudAwsOutput) ToIntegrationCloudAwsPtrOutputWithContext(ctx context.Context) IntegrationCloudAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationCloudAws) *IntegrationCloudAws {
		return &v
	}).(IntegrationCloudAwsPtrOutput)
}

// Allows the Cloud Integration to access S3 buckets for Log Integrations.
func (o IntegrationCloudAwsOutput) AllowS3Access() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *bool { return v.AllowS3Access }).(pulumi.BoolPtrOutput)
}

// The ARN of the IAM role that Formal assumes in your AWS account to access your resources.
func (o IntegrationCloudAwsOutput) AwsCustomerRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *string { return v.AwsCustomerRoleArn }).(pulumi.StringPtrOutput)
}

// Enables resource autodiscovery for EC2 instances.
func (o IntegrationCloudAwsOutput) EnableEc2Autodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *bool { return v.EnableEc2Autodiscovery }).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for ECS clusters.
func (o IntegrationCloudAwsOutput) EnableEcsAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *bool { return v.EnableEcsAutodiscovery }).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for EKS clusters.
func (o IntegrationCloudAwsOutput) EnableEksAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *bool { return v.EnableEksAutodiscovery }).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for RDS instances (PostgreSQL, MySQL, MongoDB).
func (o IntegrationCloudAwsOutput) EnableRdsAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *bool { return v.EnableRdsAutodiscovery }).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for Redshift clusters.
func (o IntegrationCloudAwsOutput) EnableRedshiftAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *bool { return v.EnableRedshiftAutodiscovery }).(pulumi.BoolPtrOutput)
}

// The S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations.
func (o IntegrationCloudAwsOutput) S3BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationCloudAws) *string { return v.S3BucketArn }).(pulumi.StringPtrOutput)
}

// The template version of the CloudFormation stack. Use `latest` to stay in sync.
func (o IntegrationCloudAwsOutput) TemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationCloudAws) string { return v.TemplateVersion }).(pulumi.StringOutput)
}

type IntegrationCloudAwsPtrOutput struct{ *pulumi.OutputState }

func (IntegrationCloudAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationCloudAws)(nil)).Elem()
}

func (o IntegrationCloudAwsPtrOutput) ToIntegrationCloudAwsPtrOutput() IntegrationCloudAwsPtrOutput {
	return o
}

func (o IntegrationCloudAwsPtrOutput) ToIntegrationCloudAwsPtrOutputWithContext(ctx context.Context) IntegrationCloudAwsPtrOutput {
	return o
}

func (o IntegrationCloudAwsPtrOutput) Elem() IntegrationCloudAwsOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) IntegrationCloudAws {
		if v != nil {
			return *v
		}
		var ret IntegrationCloudAws
		return ret
	}).(IntegrationCloudAwsOutput)
}

// Allows the Cloud Integration to access S3 buckets for Log Integrations.
func (o IntegrationCloudAwsPtrOutput) AllowS3Access() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *bool {
		if v == nil {
			return nil
		}
		return v.AllowS3Access
	}).(pulumi.BoolPtrOutput)
}

// The ARN of the IAM role that Formal assumes in your AWS account to access your resources.
func (o IntegrationCloudAwsPtrOutput) AwsCustomerRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *string {
		if v == nil {
			return nil
		}
		return v.AwsCustomerRoleArn
	}).(pulumi.StringPtrOutput)
}

// Enables resource autodiscovery for EC2 instances.
func (o IntegrationCloudAwsPtrOutput) EnableEc2Autodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEc2Autodiscovery
	}).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for ECS clusters.
func (o IntegrationCloudAwsPtrOutput) EnableEcsAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEcsAutodiscovery
	}).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for EKS clusters.
func (o IntegrationCloudAwsPtrOutput) EnableEksAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEksAutodiscovery
	}).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for RDS instances (PostgreSQL, MySQL, MongoDB).
func (o IntegrationCloudAwsPtrOutput) EnableRdsAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRdsAutodiscovery
	}).(pulumi.BoolPtrOutput)
}

// Enables resource autodiscovery for Redshift clusters.
func (o IntegrationCloudAwsPtrOutput) EnableRedshiftAutodiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRedshiftAutodiscovery
	}).(pulumi.BoolPtrOutput)
}

// The S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations.
func (o IntegrationCloudAwsPtrOutput) S3BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketArn
	}).(pulumi.StringPtrOutput)
}

// The template version of the CloudFormation stack. Use `latest` to stay in sync.
func (o IntegrationCloudAwsPtrOutput) TemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationCloudAws) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationDataCatalogDatahub struct {
	// Api Key for the Datahub instance.
	ApiKey string `pulumi:"apiKey"`
	// Generalized metadata service url for the Datahub instance.
	GeneralizedMetadataServiceUrl string `pulumi:"generalizedMetadataServiceUrl"`
	// Webhook secret of the Datahub instance.
	WebhookSecret string `pulumi:"webhookSecret"`
}

// IntegrationDataCatalogDatahubInput is an input type that accepts IntegrationDataCatalogDatahubArgs and IntegrationDataCatalogDatahubOutput values.
// You can construct a concrete instance of `IntegrationDataCatalogDatahubInput` via:
//
//	IntegrationDataCatalogDatahubArgs{...}
type IntegrationDataCatalogDatahubInput interface {
	pulumi.Input

	ToIntegrationDataCatalogDatahubOutput() IntegrationDataCatalogDatahubOutput
	ToIntegrationDataCatalogDatahubOutputWithContext(context.Context) IntegrationDataCatalogDatahubOutput
}

type IntegrationDataCatalogDatahubArgs struct {
	// Api Key for the Datahub instance.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Generalized metadata service url for the Datahub instance.
	GeneralizedMetadataServiceUrl pulumi.StringInput `pulumi:"generalizedMetadataServiceUrl"`
	// Webhook secret of the Datahub instance.
	WebhookSecret pulumi.StringInput `pulumi:"webhookSecret"`
}

func (IntegrationDataCatalogDatahubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationDataCatalogDatahub)(nil)).Elem()
}

func (i IntegrationDataCatalogDatahubArgs) ToIntegrationDataCatalogDatahubOutput() IntegrationDataCatalogDatahubOutput {
	return i.ToIntegrationDataCatalogDatahubOutputWithContext(context.Background())
}

func (i IntegrationDataCatalogDatahubArgs) ToIntegrationDataCatalogDatahubOutputWithContext(ctx context.Context) IntegrationDataCatalogDatahubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationDataCatalogDatahubOutput)
}

func (i IntegrationDataCatalogDatahubArgs) ToIntegrationDataCatalogDatahubPtrOutput() IntegrationDataCatalogDatahubPtrOutput {
	return i.ToIntegrationDataCatalogDatahubPtrOutputWithContext(context.Background())
}

func (i IntegrationDataCatalogDatahubArgs) ToIntegrationDataCatalogDatahubPtrOutputWithContext(ctx context.Context) IntegrationDataCatalogDatahubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationDataCatalogDatahubOutput).ToIntegrationDataCatalogDatahubPtrOutputWithContext(ctx)
}

// IntegrationDataCatalogDatahubPtrInput is an input type that accepts IntegrationDataCatalogDatahubArgs, IntegrationDataCatalogDatahubPtr and IntegrationDataCatalogDatahubPtrOutput values.
// You can construct a concrete instance of `IntegrationDataCatalogDatahubPtrInput` via:
//
//	        IntegrationDataCatalogDatahubArgs{...}
//
//	or:
//
//	        nil
type IntegrationDataCatalogDatahubPtrInput interface {
	pulumi.Input

	ToIntegrationDataCatalogDatahubPtrOutput() IntegrationDataCatalogDatahubPtrOutput
	ToIntegrationDataCatalogDatahubPtrOutputWithContext(context.Context) IntegrationDataCatalogDatahubPtrOutput
}

type integrationDataCatalogDatahubPtrType IntegrationDataCatalogDatahubArgs

func IntegrationDataCatalogDatahubPtr(v *IntegrationDataCatalogDatahubArgs) IntegrationDataCatalogDatahubPtrInput {
	return (*integrationDataCatalogDatahubPtrType)(v)
}

func (*integrationDataCatalogDatahubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationDataCatalogDatahub)(nil)).Elem()
}

func (i *integrationDataCatalogDatahubPtrType) ToIntegrationDataCatalogDatahubPtrOutput() IntegrationDataCatalogDatahubPtrOutput {
	return i.ToIntegrationDataCatalogDatahubPtrOutputWithContext(context.Background())
}

func (i *integrationDataCatalogDatahubPtrType) ToIntegrationDataCatalogDatahubPtrOutputWithContext(ctx context.Context) IntegrationDataCatalogDatahubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationDataCatalogDatahubPtrOutput)
}

type IntegrationDataCatalogDatahubOutput struct{ *pulumi.OutputState }

func (IntegrationDataCatalogDatahubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationDataCatalogDatahub)(nil)).Elem()
}

func (o IntegrationDataCatalogDatahubOutput) ToIntegrationDataCatalogDatahubOutput() IntegrationDataCatalogDatahubOutput {
	return o
}

func (o IntegrationDataCatalogDatahubOutput) ToIntegrationDataCatalogDatahubOutputWithContext(ctx context.Context) IntegrationDataCatalogDatahubOutput {
	return o
}

func (o IntegrationDataCatalogDatahubOutput) ToIntegrationDataCatalogDatahubPtrOutput() IntegrationDataCatalogDatahubPtrOutput {
	return o.ToIntegrationDataCatalogDatahubPtrOutputWithContext(context.Background())
}

func (o IntegrationDataCatalogDatahubOutput) ToIntegrationDataCatalogDatahubPtrOutputWithContext(ctx context.Context) IntegrationDataCatalogDatahubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationDataCatalogDatahub) *IntegrationDataCatalogDatahub {
		return &v
	}).(IntegrationDataCatalogDatahubPtrOutput)
}

// Api Key for the Datahub instance.
func (o IntegrationDataCatalogDatahubOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationDataCatalogDatahub) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Generalized metadata service url for the Datahub instance.
func (o IntegrationDataCatalogDatahubOutput) GeneralizedMetadataServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationDataCatalogDatahub) string { return v.GeneralizedMetadataServiceUrl }).(pulumi.StringOutput)
}

// Webhook secret of the Datahub instance.
func (o IntegrationDataCatalogDatahubOutput) WebhookSecret() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationDataCatalogDatahub) string { return v.WebhookSecret }).(pulumi.StringOutput)
}

type IntegrationDataCatalogDatahubPtrOutput struct{ *pulumi.OutputState }

func (IntegrationDataCatalogDatahubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationDataCatalogDatahub)(nil)).Elem()
}

func (o IntegrationDataCatalogDatahubPtrOutput) ToIntegrationDataCatalogDatahubPtrOutput() IntegrationDataCatalogDatahubPtrOutput {
	return o
}

func (o IntegrationDataCatalogDatahubPtrOutput) ToIntegrationDataCatalogDatahubPtrOutputWithContext(ctx context.Context) IntegrationDataCatalogDatahubPtrOutput {
	return o
}

func (o IntegrationDataCatalogDatahubPtrOutput) Elem() IntegrationDataCatalogDatahubOutput {
	return o.ApplyT(func(v *IntegrationDataCatalogDatahub) IntegrationDataCatalogDatahub {
		if v != nil {
			return *v
		}
		var ret IntegrationDataCatalogDatahub
		return ret
	}).(IntegrationDataCatalogDatahubOutput)
}

// Api Key for the Datahub instance.
func (o IntegrationDataCatalogDatahubPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationDataCatalogDatahub) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Generalized metadata service url for the Datahub instance.
func (o IntegrationDataCatalogDatahubPtrOutput) GeneralizedMetadataServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationDataCatalogDatahub) *string {
		if v == nil {
			return nil
		}
		return &v.GeneralizedMetadataServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Webhook secret of the Datahub instance.
func (o IntegrationDataCatalogDatahubPtrOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationDataCatalogDatahub) *string {
		if v == nil {
			return nil
		}
		return &v.WebhookSecret
	}).(pulumi.StringPtrOutput)
}

type IntegrationLogAwsS3 struct {
	// Cloud Integration ID.
	CloudIntegrationId string `pulumi:"cloudIntegrationId"`
	// AWS Region.
	Region *string `pulumi:"region"`
	// AWS S3 Bucket Name.
	S3BucketName string `pulumi:"s3BucketName"`
}

// IntegrationLogAwsS3Input is an input type that accepts IntegrationLogAwsS3Args and IntegrationLogAwsS3Output values.
// You can construct a concrete instance of `IntegrationLogAwsS3Input` via:
//
//	IntegrationLogAwsS3Args{...}
type IntegrationLogAwsS3Input interface {
	pulumi.Input

	ToIntegrationLogAwsS3Output() IntegrationLogAwsS3Output
	ToIntegrationLogAwsS3OutputWithContext(context.Context) IntegrationLogAwsS3Output
}

type IntegrationLogAwsS3Args struct {
	// Cloud Integration ID.
	CloudIntegrationId pulumi.StringInput `pulumi:"cloudIntegrationId"`
	// AWS Region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// AWS S3 Bucket Name.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
}

func (IntegrationLogAwsS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationLogAwsS3)(nil)).Elem()
}

func (i IntegrationLogAwsS3Args) ToIntegrationLogAwsS3Output() IntegrationLogAwsS3Output {
	return i.ToIntegrationLogAwsS3OutputWithContext(context.Background())
}

func (i IntegrationLogAwsS3Args) ToIntegrationLogAwsS3OutputWithContext(ctx context.Context) IntegrationLogAwsS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogAwsS3Output)
}

func (i IntegrationLogAwsS3Args) ToIntegrationLogAwsS3PtrOutput() IntegrationLogAwsS3PtrOutput {
	return i.ToIntegrationLogAwsS3PtrOutputWithContext(context.Background())
}

func (i IntegrationLogAwsS3Args) ToIntegrationLogAwsS3PtrOutputWithContext(ctx context.Context) IntegrationLogAwsS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogAwsS3Output).ToIntegrationLogAwsS3PtrOutputWithContext(ctx)
}

// IntegrationLogAwsS3PtrInput is an input type that accepts IntegrationLogAwsS3Args, IntegrationLogAwsS3Ptr and IntegrationLogAwsS3PtrOutput values.
// You can construct a concrete instance of `IntegrationLogAwsS3PtrInput` via:
//
//	        IntegrationLogAwsS3Args{...}
//
//	or:
//
//	        nil
type IntegrationLogAwsS3PtrInput interface {
	pulumi.Input

	ToIntegrationLogAwsS3PtrOutput() IntegrationLogAwsS3PtrOutput
	ToIntegrationLogAwsS3PtrOutputWithContext(context.Context) IntegrationLogAwsS3PtrOutput
}

type integrationLogAwsS3PtrType IntegrationLogAwsS3Args

func IntegrationLogAwsS3Ptr(v *IntegrationLogAwsS3Args) IntegrationLogAwsS3PtrInput {
	return (*integrationLogAwsS3PtrType)(v)
}

func (*integrationLogAwsS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLogAwsS3)(nil)).Elem()
}

func (i *integrationLogAwsS3PtrType) ToIntegrationLogAwsS3PtrOutput() IntegrationLogAwsS3PtrOutput {
	return i.ToIntegrationLogAwsS3PtrOutputWithContext(context.Background())
}

func (i *integrationLogAwsS3PtrType) ToIntegrationLogAwsS3PtrOutputWithContext(ctx context.Context) IntegrationLogAwsS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogAwsS3PtrOutput)
}

type IntegrationLogAwsS3Output struct{ *pulumi.OutputState }

func (IntegrationLogAwsS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationLogAwsS3)(nil)).Elem()
}

func (o IntegrationLogAwsS3Output) ToIntegrationLogAwsS3Output() IntegrationLogAwsS3Output {
	return o
}

func (o IntegrationLogAwsS3Output) ToIntegrationLogAwsS3OutputWithContext(ctx context.Context) IntegrationLogAwsS3Output {
	return o
}

func (o IntegrationLogAwsS3Output) ToIntegrationLogAwsS3PtrOutput() IntegrationLogAwsS3PtrOutput {
	return o.ToIntegrationLogAwsS3PtrOutputWithContext(context.Background())
}

func (o IntegrationLogAwsS3Output) ToIntegrationLogAwsS3PtrOutputWithContext(ctx context.Context) IntegrationLogAwsS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationLogAwsS3) *IntegrationLogAwsS3 {
		return &v
	}).(IntegrationLogAwsS3PtrOutput)
}

// Cloud Integration ID.
func (o IntegrationLogAwsS3Output) CloudIntegrationId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogAwsS3) string { return v.CloudIntegrationId }).(pulumi.StringOutput)
}

// AWS Region.
func (o IntegrationLogAwsS3Output) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationLogAwsS3) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// AWS S3 Bucket Name.
func (o IntegrationLogAwsS3Output) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogAwsS3) string { return v.S3BucketName }).(pulumi.StringOutput)
}

type IntegrationLogAwsS3PtrOutput struct{ *pulumi.OutputState }

func (IntegrationLogAwsS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLogAwsS3)(nil)).Elem()
}

func (o IntegrationLogAwsS3PtrOutput) ToIntegrationLogAwsS3PtrOutput() IntegrationLogAwsS3PtrOutput {
	return o
}

func (o IntegrationLogAwsS3PtrOutput) ToIntegrationLogAwsS3PtrOutputWithContext(ctx context.Context) IntegrationLogAwsS3PtrOutput {
	return o
}

func (o IntegrationLogAwsS3PtrOutput) Elem() IntegrationLogAwsS3Output {
	return o.ApplyT(func(v *IntegrationLogAwsS3) IntegrationLogAwsS3 {
		if v != nil {
			return *v
		}
		var ret IntegrationLogAwsS3
		return ret
	}).(IntegrationLogAwsS3Output)
}

// Cloud Integration ID.
func (o IntegrationLogAwsS3PtrOutput) CloudIntegrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogAwsS3) *string {
		if v == nil {
			return nil
		}
		return &v.CloudIntegrationId
	}).(pulumi.StringPtrOutput)
}

// AWS Region.
func (o IntegrationLogAwsS3PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogAwsS3) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// AWS S3 Bucket Name.
func (o IntegrationLogAwsS3PtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogAwsS3) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

type IntegrationLogDatadog struct {
	// Account ID of Datadog.
	AccountId string `pulumi:"accountId"`
	// API Key of Datadog.
	ApiKey string `pulumi:"apiKey"`
	// URL of your Datadog app.
	Site string `pulumi:"site"`
}

// IntegrationLogDatadogInput is an input type that accepts IntegrationLogDatadogArgs and IntegrationLogDatadogOutput values.
// You can construct a concrete instance of `IntegrationLogDatadogInput` via:
//
//	IntegrationLogDatadogArgs{...}
type IntegrationLogDatadogInput interface {
	pulumi.Input

	ToIntegrationLogDatadogOutput() IntegrationLogDatadogOutput
	ToIntegrationLogDatadogOutputWithContext(context.Context) IntegrationLogDatadogOutput
}

type IntegrationLogDatadogArgs struct {
	// Account ID of Datadog.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// API Key of Datadog.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// URL of your Datadog app.
	Site pulumi.StringInput `pulumi:"site"`
}

func (IntegrationLogDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationLogDatadog)(nil)).Elem()
}

func (i IntegrationLogDatadogArgs) ToIntegrationLogDatadogOutput() IntegrationLogDatadogOutput {
	return i.ToIntegrationLogDatadogOutputWithContext(context.Background())
}

func (i IntegrationLogDatadogArgs) ToIntegrationLogDatadogOutputWithContext(ctx context.Context) IntegrationLogDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogDatadogOutput)
}

func (i IntegrationLogDatadogArgs) ToIntegrationLogDatadogPtrOutput() IntegrationLogDatadogPtrOutput {
	return i.ToIntegrationLogDatadogPtrOutputWithContext(context.Background())
}

func (i IntegrationLogDatadogArgs) ToIntegrationLogDatadogPtrOutputWithContext(ctx context.Context) IntegrationLogDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogDatadogOutput).ToIntegrationLogDatadogPtrOutputWithContext(ctx)
}

// IntegrationLogDatadogPtrInput is an input type that accepts IntegrationLogDatadogArgs, IntegrationLogDatadogPtr and IntegrationLogDatadogPtrOutput values.
// You can construct a concrete instance of `IntegrationLogDatadogPtrInput` via:
//
//	        IntegrationLogDatadogArgs{...}
//
//	or:
//
//	        nil
type IntegrationLogDatadogPtrInput interface {
	pulumi.Input

	ToIntegrationLogDatadogPtrOutput() IntegrationLogDatadogPtrOutput
	ToIntegrationLogDatadogPtrOutputWithContext(context.Context) IntegrationLogDatadogPtrOutput
}

type integrationLogDatadogPtrType IntegrationLogDatadogArgs

func IntegrationLogDatadogPtr(v *IntegrationLogDatadogArgs) IntegrationLogDatadogPtrInput {
	return (*integrationLogDatadogPtrType)(v)
}

func (*integrationLogDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLogDatadog)(nil)).Elem()
}

func (i *integrationLogDatadogPtrType) ToIntegrationLogDatadogPtrOutput() IntegrationLogDatadogPtrOutput {
	return i.ToIntegrationLogDatadogPtrOutputWithContext(context.Background())
}

func (i *integrationLogDatadogPtrType) ToIntegrationLogDatadogPtrOutputWithContext(ctx context.Context) IntegrationLogDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogDatadogPtrOutput)
}

type IntegrationLogDatadogOutput struct{ *pulumi.OutputState }

func (IntegrationLogDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationLogDatadog)(nil)).Elem()
}

func (o IntegrationLogDatadogOutput) ToIntegrationLogDatadogOutput() IntegrationLogDatadogOutput {
	return o
}

func (o IntegrationLogDatadogOutput) ToIntegrationLogDatadogOutputWithContext(ctx context.Context) IntegrationLogDatadogOutput {
	return o
}

func (o IntegrationLogDatadogOutput) ToIntegrationLogDatadogPtrOutput() IntegrationLogDatadogPtrOutput {
	return o.ToIntegrationLogDatadogPtrOutputWithContext(context.Background())
}

func (o IntegrationLogDatadogOutput) ToIntegrationLogDatadogPtrOutputWithContext(ctx context.Context) IntegrationLogDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationLogDatadog) *IntegrationLogDatadog {
		return &v
	}).(IntegrationLogDatadogPtrOutput)
}

// Account ID of Datadog.
func (o IntegrationLogDatadogOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogDatadog) string { return v.AccountId }).(pulumi.StringOutput)
}

// API Key of Datadog.
func (o IntegrationLogDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

// URL of your Datadog app.
func (o IntegrationLogDatadogOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogDatadog) string { return v.Site }).(pulumi.StringOutput)
}

type IntegrationLogDatadogPtrOutput struct{ *pulumi.OutputState }

func (IntegrationLogDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLogDatadog)(nil)).Elem()
}

func (o IntegrationLogDatadogPtrOutput) ToIntegrationLogDatadogPtrOutput() IntegrationLogDatadogPtrOutput {
	return o
}

func (o IntegrationLogDatadogPtrOutput) ToIntegrationLogDatadogPtrOutputWithContext(ctx context.Context) IntegrationLogDatadogPtrOutput {
	return o
}

func (o IntegrationLogDatadogPtrOutput) Elem() IntegrationLogDatadogOutput {
	return o.ApplyT(func(v *IntegrationLogDatadog) IntegrationLogDatadog {
		if v != nil {
			return *v
		}
		var ret IntegrationLogDatadog
		return ret
	}).(IntegrationLogDatadogOutput)
}

// Account ID of Datadog.
func (o IntegrationLogDatadogPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

// API Key of Datadog.
func (o IntegrationLogDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// URL of your Datadog app.
func (o IntegrationLogDatadogPtrOutput) Site() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.Site
	}).(pulumi.StringPtrOutput)
}

type IntegrationLogSplunk struct {
	// Access Token of Splunk.
	AccessToken string `pulumi:"accessToken"`
	// URL of your Splunk app.
	Host string `pulumi:"host"`
	// Port of your Splunk app.
	Port int `pulumi:"port"`
}

// IntegrationLogSplunkInput is an input type that accepts IntegrationLogSplunkArgs and IntegrationLogSplunkOutput values.
// You can construct a concrete instance of `IntegrationLogSplunkInput` via:
//
//	IntegrationLogSplunkArgs{...}
type IntegrationLogSplunkInput interface {
	pulumi.Input

	ToIntegrationLogSplunkOutput() IntegrationLogSplunkOutput
	ToIntegrationLogSplunkOutputWithContext(context.Context) IntegrationLogSplunkOutput
}

type IntegrationLogSplunkArgs struct {
	// Access Token of Splunk.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// URL of your Splunk app.
	Host pulumi.StringInput `pulumi:"host"`
	// Port of your Splunk app.
	Port pulumi.IntInput `pulumi:"port"`
}

func (IntegrationLogSplunkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationLogSplunk)(nil)).Elem()
}

func (i IntegrationLogSplunkArgs) ToIntegrationLogSplunkOutput() IntegrationLogSplunkOutput {
	return i.ToIntegrationLogSplunkOutputWithContext(context.Background())
}

func (i IntegrationLogSplunkArgs) ToIntegrationLogSplunkOutputWithContext(ctx context.Context) IntegrationLogSplunkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogSplunkOutput)
}

func (i IntegrationLogSplunkArgs) ToIntegrationLogSplunkPtrOutput() IntegrationLogSplunkPtrOutput {
	return i.ToIntegrationLogSplunkPtrOutputWithContext(context.Background())
}

func (i IntegrationLogSplunkArgs) ToIntegrationLogSplunkPtrOutputWithContext(ctx context.Context) IntegrationLogSplunkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogSplunkOutput).ToIntegrationLogSplunkPtrOutputWithContext(ctx)
}

// IntegrationLogSplunkPtrInput is an input type that accepts IntegrationLogSplunkArgs, IntegrationLogSplunkPtr and IntegrationLogSplunkPtrOutput values.
// You can construct a concrete instance of `IntegrationLogSplunkPtrInput` via:
//
//	        IntegrationLogSplunkArgs{...}
//
//	or:
//
//	        nil
type IntegrationLogSplunkPtrInput interface {
	pulumi.Input

	ToIntegrationLogSplunkPtrOutput() IntegrationLogSplunkPtrOutput
	ToIntegrationLogSplunkPtrOutputWithContext(context.Context) IntegrationLogSplunkPtrOutput
}

type integrationLogSplunkPtrType IntegrationLogSplunkArgs

func IntegrationLogSplunkPtr(v *IntegrationLogSplunkArgs) IntegrationLogSplunkPtrInput {
	return (*integrationLogSplunkPtrType)(v)
}

func (*integrationLogSplunkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLogSplunk)(nil)).Elem()
}

func (i *integrationLogSplunkPtrType) ToIntegrationLogSplunkPtrOutput() IntegrationLogSplunkPtrOutput {
	return i.ToIntegrationLogSplunkPtrOutputWithContext(context.Background())
}

func (i *integrationLogSplunkPtrType) ToIntegrationLogSplunkPtrOutputWithContext(ctx context.Context) IntegrationLogSplunkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLogSplunkPtrOutput)
}

type IntegrationLogSplunkOutput struct{ *pulumi.OutputState }

func (IntegrationLogSplunkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationLogSplunk)(nil)).Elem()
}

func (o IntegrationLogSplunkOutput) ToIntegrationLogSplunkOutput() IntegrationLogSplunkOutput {
	return o
}

func (o IntegrationLogSplunkOutput) ToIntegrationLogSplunkOutputWithContext(ctx context.Context) IntegrationLogSplunkOutput {
	return o
}

func (o IntegrationLogSplunkOutput) ToIntegrationLogSplunkPtrOutput() IntegrationLogSplunkPtrOutput {
	return o.ToIntegrationLogSplunkPtrOutputWithContext(context.Background())
}

func (o IntegrationLogSplunkOutput) ToIntegrationLogSplunkPtrOutputWithContext(ctx context.Context) IntegrationLogSplunkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationLogSplunk) *IntegrationLogSplunk {
		return &v
	}).(IntegrationLogSplunkPtrOutput)
}

// Access Token of Splunk.
func (o IntegrationLogSplunkOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogSplunk) string { return v.AccessToken }).(pulumi.StringOutput)
}

// URL of your Splunk app.
func (o IntegrationLogSplunkOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationLogSplunk) string { return v.Host }).(pulumi.StringOutput)
}

// Port of your Splunk app.
func (o IntegrationLogSplunkOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v IntegrationLogSplunk) int { return v.Port }).(pulumi.IntOutput)
}

type IntegrationLogSplunkPtrOutput struct{ *pulumi.OutputState }

func (IntegrationLogSplunkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLogSplunk)(nil)).Elem()
}

func (o IntegrationLogSplunkPtrOutput) ToIntegrationLogSplunkPtrOutput() IntegrationLogSplunkPtrOutput {
	return o
}

func (o IntegrationLogSplunkPtrOutput) ToIntegrationLogSplunkPtrOutputWithContext(ctx context.Context) IntegrationLogSplunkPtrOutput {
	return o
}

func (o IntegrationLogSplunkPtrOutput) Elem() IntegrationLogSplunkOutput {
	return o.ApplyT(func(v *IntegrationLogSplunk) IntegrationLogSplunk {
		if v != nil {
			return *v
		}
		var ret IntegrationLogSplunk
		return ret
	}).(IntegrationLogSplunkOutput)
}

// Access Token of Splunk.
func (o IntegrationLogSplunkPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogSplunk) *string {
		if v == nil {
			return nil
		}
		return &v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// URL of your Splunk app.
func (o IntegrationLogSplunkPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationLogSplunk) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Port of your Splunk app.
func (o IntegrationLogSplunkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationLogSplunk) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type IntegrationMdmKandji struct {
	// API Key of your Kandji organization.
	ApiKey string `pulumi:"apiKey"`
	// API URL of your Kandji organization.
	ApiUrl string `pulumi:"apiUrl"`
}

// IntegrationMdmKandjiInput is an input type that accepts IntegrationMdmKandjiArgs and IntegrationMdmKandjiOutput values.
// You can construct a concrete instance of `IntegrationMdmKandjiInput` via:
//
//	IntegrationMdmKandjiArgs{...}
type IntegrationMdmKandjiInput interface {
	pulumi.Input

	ToIntegrationMdmKandjiOutput() IntegrationMdmKandjiOutput
	ToIntegrationMdmKandjiOutputWithContext(context.Context) IntegrationMdmKandjiOutput
}

type IntegrationMdmKandjiArgs struct {
	// API Key of your Kandji organization.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// API URL of your Kandji organization.
	ApiUrl pulumi.StringInput `pulumi:"apiUrl"`
}

func (IntegrationMdmKandjiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMdmKandji)(nil)).Elem()
}

func (i IntegrationMdmKandjiArgs) ToIntegrationMdmKandjiOutput() IntegrationMdmKandjiOutput {
	return i.ToIntegrationMdmKandjiOutputWithContext(context.Background())
}

func (i IntegrationMdmKandjiArgs) ToIntegrationMdmKandjiOutputWithContext(ctx context.Context) IntegrationMdmKandjiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMdmKandjiOutput)
}

func (i IntegrationMdmKandjiArgs) ToIntegrationMdmKandjiPtrOutput() IntegrationMdmKandjiPtrOutput {
	return i.ToIntegrationMdmKandjiPtrOutputWithContext(context.Background())
}

func (i IntegrationMdmKandjiArgs) ToIntegrationMdmKandjiPtrOutputWithContext(ctx context.Context) IntegrationMdmKandjiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMdmKandjiOutput).ToIntegrationMdmKandjiPtrOutputWithContext(ctx)
}

// IntegrationMdmKandjiPtrInput is an input type that accepts IntegrationMdmKandjiArgs, IntegrationMdmKandjiPtr and IntegrationMdmKandjiPtrOutput values.
// You can construct a concrete instance of `IntegrationMdmKandjiPtrInput` via:
//
//	        IntegrationMdmKandjiArgs{...}
//
//	or:
//
//	        nil
type IntegrationMdmKandjiPtrInput interface {
	pulumi.Input

	ToIntegrationMdmKandjiPtrOutput() IntegrationMdmKandjiPtrOutput
	ToIntegrationMdmKandjiPtrOutputWithContext(context.Context) IntegrationMdmKandjiPtrOutput
}

type integrationMdmKandjiPtrType IntegrationMdmKandjiArgs

func IntegrationMdmKandjiPtr(v *IntegrationMdmKandjiArgs) IntegrationMdmKandjiPtrInput {
	return (*integrationMdmKandjiPtrType)(v)
}

func (*integrationMdmKandjiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMdmKandji)(nil)).Elem()
}

func (i *integrationMdmKandjiPtrType) ToIntegrationMdmKandjiPtrOutput() IntegrationMdmKandjiPtrOutput {
	return i.ToIntegrationMdmKandjiPtrOutputWithContext(context.Background())
}

func (i *integrationMdmKandjiPtrType) ToIntegrationMdmKandjiPtrOutputWithContext(ctx context.Context) IntegrationMdmKandjiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMdmKandjiPtrOutput)
}

type IntegrationMdmKandjiOutput struct{ *pulumi.OutputState }

func (IntegrationMdmKandjiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMdmKandji)(nil)).Elem()
}

func (o IntegrationMdmKandjiOutput) ToIntegrationMdmKandjiOutput() IntegrationMdmKandjiOutput {
	return o
}

func (o IntegrationMdmKandjiOutput) ToIntegrationMdmKandjiOutputWithContext(ctx context.Context) IntegrationMdmKandjiOutput {
	return o
}

func (o IntegrationMdmKandjiOutput) ToIntegrationMdmKandjiPtrOutput() IntegrationMdmKandjiPtrOutput {
	return o.ToIntegrationMdmKandjiPtrOutputWithContext(context.Background())
}

func (o IntegrationMdmKandjiOutput) ToIntegrationMdmKandjiPtrOutputWithContext(ctx context.Context) IntegrationMdmKandjiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationMdmKandji) *IntegrationMdmKandji {
		return &v
	}).(IntegrationMdmKandjiPtrOutput)
}

// API Key of your Kandji organization.
func (o IntegrationMdmKandjiOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationMdmKandji) string { return v.ApiKey }).(pulumi.StringOutput)
}

// API URL of your Kandji organization.
func (o IntegrationMdmKandjiOutput) ApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationMdmKandji) string { return v.ApiUrl }).(pulumi.StringOutput)
}

type IntegrationMdmKandjiPtrOutput struct{ *pulumi.OutputState }

func (IntegrationMdmKandjiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMdmKandji)(nil)).Elem()
}

func (o IntegrationMdmKandjiPtrOutput) ToIntegrationMdmKandjiPtrOutput() IntegrationMdmKandjiPtrOutput {
	return o
}

func (o IntegrationMdmKandjiPtrOutput) ToIntegrationMdmKandjiPtrOutputWithContext(ctx context.Context) IntegrationMdmKandjiPtrOutput {
	return o
}

func (o IntegrationMdmKandjiPtrOutput) Elem() IntegrationMdmKandjiOutput {
	return o.ApplyT(func(v *IntegrationMdmKandji) IntegrationMdmKandji {
		if v != nil {
			return *v
		}
		var ret IntegrationMdmKandji
		return ret
	}).(IntegrationMdmKandjiOutput)
}

// API Key of your Kandji organization.
func (o IntegrationMdmKandjiPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationMdmKandji) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// API URL of your Kandji organization.
func (o IntegrationMdmKandjiPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationMdmKandji) *string {
		if v == nil {
			return nil
		}
		return &v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

type IntegrationMfaDuo struct {
	// Duo API Hostname.
	ApiHostname string `pulumi:"apiHostname"`
	// Duo Integration Key.
	IntegrationKey string `pulumi:"integrationKey"`
	// Duo Secret Key.
	SecretKey string `pulumi:"secretKey"`
}

// IntegrationMfaDuoInput is an input type that accepts IntegrationMfaDuoArgs and IntegrationMfaDuoOutput values.
// You can construct a concrete instance of `IntegrationMfaDuoInput` via:
//
//	IntegrationMfaDuoArgs{...}
type IntegrationMfaDuoInput interface {
	pulumi.Input

	ToIntegrationMfaDuoOutput() IntegrationMfaDuoOutput
	ToIntegrationMfaDuoOutputWithContext(context.Context) IntegrationMfaDuoOutput
}

type IntegrationMfaDuoArgs struct {
	// Duo API Hostname.
	ApiHostname pulumi.StringInput `pulumi:"apiHostname"`
	// Duo Integration Key.
	IntegrationKey pulumi.StringInput `pulumi:"integrationKey"`
	// Duo Secret Key.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (IntegrationMfaDuoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMfaDuo)(nil)).Elem()
}

func (i IntegrationMfaDuoArgs) ToIntegrationMfaDuoOutput() IntegrationMfaDuoOutput {
	return i.ToIntegrationMfaDuoOutputWithContext(context.Background())
}

func (i IntegrationMfaDuoArgs) ToIntegrationMfaDuoOutputWithContext(ctx context.Context) IntegrationMfaDuoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMfaDuoOutput)
}

func (i IntegrationMfaDuoArgs) ToIntegrationMfaDuoPtrOutput() IntegrationMfaDuoPtrOutput {
	return i.ToIntegrationMfaDuoPtrOutputWithContext(context.Background())
}

func (i IntegrationMfaDuoArgs) ToIntegrationMfaDuoPtrOutputWithContext(ctx context.Context) IntegrationMfaDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMfaDuoOutput).ToIntegrationMfaDuoPtrOutputWithContext(ctx)
}

// IntegrationMfaDuoPtrInput is an input type that accepts IntegrationMfaDuoArgs, IntegrationMfaDuoPtr and IntegrationMfaDuoPtrOutput values.
// You can construct a concrete instance of `IntegrationMfaDuoPtrInput` via:
//
//	        IntegrationMfaDuoArgs{...}
//
//	or:
//
//	        nil
type IntegrationMfaDuoPtrInput interface {
	pulumi.Input

	ToIntegrationMfaDuoPtrOutput() IntegrationMfaDuoPtrOutput
	ToIntegrationMfaDuoPtrOutputWithContext(context.Context) IntegrationMfaDuoPtrOutput
}

type integrationMfaDuoPtrType IntegrationMfaDuoArgs

func IntegrationMfaDuoPtr(v *IntegrationMfaDuoArgs) IntegrationMfaDuoPtrInput {
	return (*integrationMfaDuoPtrType)(v)
}

func (*integrationMfaDuoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMfaDuo)(nil)).Elem()
}

func (i *integrationMfaDuoPtrType) ToIntegrationMfaDuoPtrOutput() IntegrationMfaDuoPtrOutput {
	return i.ToIntegrationMfaDuoPtrOutputWithContext(context.Background())
}

func (i *integrationMfaDuoPtrType) ToIntegrationMfaDuoPtrOutputWithContext(ctx context.Context) IntegrationMfaDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMfaDuoPtrOutput)
}

type IntegrationMfaDuoOutput struct{ *pulumi.OutputState }

func (IntegrationMfaDuoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMfaDuo)(nil)).Elem()
}

func (o IntegrationMfaDuoOutput) ToIntegrationMfaDuoOutput() IntegrationMfaDuoOutput {
	return o
}

func (o IntegrationMfaDuoOutput) ToIntegrationMfaDuoOutputWithContext(ctx context.Context) IntegrationMfaDuoOutput {
	return o
}

func (o IntegrationMfaDuoOutput) ToIntegrationMfaDuoPtrOutput() IntegrationMfaDuoPtrOutput {
	return o.ToIntegrationMfaDuoPtrOutputWithContext(context.Background())
}

func (o IntegrationMfaDuoOutput) ToIntegrationMfaDuoPtrOutputWithContext(ctx context.Context) IntegrationMfaDuoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationMfaDuo) *IntegrationMfaDuo {
		return &v
	}).(IntegrationMfaDuoPtrOutput)
}

// Duo API Hostname.
func (o IntegrationMfaDuoOutput) ApiHostname() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationMfaDuo) string { return v.ApiHostname }).(pulumi.StringOutput)
}

// Duo Integration Key.
func (o IntegrationMfaDuoOutput) IntegrationKey() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationMfaDuo) string { return v.IntegrationKey }).(pulumi.StringOutput)
}

// Duo Secret Key.
func (o IntegrationMfaDuoOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationMfaDuo) string { return v.SecretKey }).(pulumi.StringOutput)
}

type IntegrationMfaDuoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationMfaDuoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMfaDuo)(nil)).Elem()
}

func (o IntegrationMfaDuoPtrOutput) ToIntegrationMfaDuoPtrOutput() IntegrationMfaDuoPtrOutput {
	return o
}

func (o IntegrationMfaDuoPtrOutput) ToIntegrationMfaDuoPtrOutputWithContext(ctx context.Context) IntegrationMfaDuoPtrOutput {
	return o
}

func (o IntegrationMfaDuoPtrOutput) Elem() IntegrationMfaDuoOutput {
	return o.ApplyT(func(v *IntegrationMfaDuo) IntegrationMfaDuo {
		if v != nil {
			return *v
		}
		var ret IntegrationMfaDuo
		return ret
	}).(IntegrationMfaDuoOutput)
}

// Duo API Hostname.
func (o IntegrationMfaDuoPtrOutput) ApiHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationMfaDuo) *string {
		if v == nil {
			return nil
		}
		return &v.ApiHostname
	}).(pulumi.StringPtrOutput)
}

// Duo Integration Key.
func (o IntegrationMfaDuoPtrOutput) IntegrationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationMfaDuo) *string {
		if v == nil {
			return nil
		}
		return &v.IntegrationKey
	}).(pulumi.StringPtrOutput)
}

// Duo Secret Key.
func (o IntegrationMfaDuoPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationMfaDuo) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type LogConfigurationRequest struct {
	// Whether to encrypt request payloads.
	Encrypt bool `pulumi:"encrypt"`
	// Maximum size of request payloads to log.
	MaxPayloadSize int `pulumi:"maxPayloadSize"`
	// SQL logging configuration for requests.
	Sql *LogConfigurationRequestSql `pulumi:"sql"`
}

// LogConfigurationRequestInput is an input type that accepts LogConfigurationRequestArgs and LogConfigurationRequestOutput values.
// You can construct a concrete instance of `LogConfigurationRequestInput` via:
//
//	LogConfigurationRequestArgs{...}
type LogConfigurationRequestInput interface {
	pulumi.Input

	ToLogConfigurationRequestOutput() LogConfigurationRequestOutput
	ToLogConfigurationRequestOutputWithContext(context.Context) LogConfigurationRequestOutput
}

type LogConfigurationRequestArgs struct {
	// Whether to encrypt request payloads.
	Encrypt pulumi.BoolInput `pulumi:"encrypt"`
	// Maximum size of request payloads to log.
	MaxPayloadSize pulumi.IntInput `pulumi:"maxPayloadSize"`
	// SQL logging configuration for requests.
	Sql LogConfigurationRequestSqlPtrInput `pulumi:"sql"`
}

func (LogConfigurationRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationRequest)(nil)).Elem()
}

func (i LogConfigurationRequestArgs) ToLogConfigurationRequestOutput() LogConfigurationRequestOutput {
	return i.ToLogConfigurationRequestOutputWithContext(context.Background())
}

func (i LogConfigurationRequestArgs) ToLogConfigurationRequestOutputWithContext(ctx context.Context) LogConfigurationRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationRequestOutput)
}

func (i LogConfigurationRequestArgs) ToLogConfigurationRequestPtrOutput() LogConfigurationRequestPtrOutput {
	return i.ToLogConfigurationRequestPtrOutputWithContext(context.Background())
}

func (i LogConfigurationRequestArgs) ToLogConfigurationRequestPtrOutputWithContext(ctx context.Context) LogConfigurationRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationRequestOutput).ToLogConfigurationRequestPtrOutputWithContext(ctx)
}

// LogConfigurationRequestPtrInput is an input type that accepts LogConfigurationRequestArgs, LogConfigurationRequestPtr and LogConfigurationRequestPtrOutput values.
// You can construct a concrete instance of `LogConfigurationRequestPtrInput` via:
//
//	        LogConfigurationRequestArgs{...}
//
//	or:
//
//	        nil
type LogConfigurationRequestPtrInput interface {
	pulumi.Input

	ToLogConfigurationRequestPtrOutput() LogConfigurationRequestPtrOutput
	ToLogConfigurationRequestPtrOutputWithContext(context.Context) LogConfigurationRequestPtrOutput
}

type logConfigurationRequestPtrType LogConfigurationRequestArgs

func LogConfigurationRequestPtr(v *LogConfigurationRequestArgs) LogConfigurationRequestPtrInput {
	return (*logConfigurationRequestPtrType)(v)
}

func (*logConfigurationRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationRequest)(nil)).Elem()
}

func (i *logConfigurationRequestPtrType) ToLogConfigurationRequestPtrOutput() LogConfigurationRequestPtrOutput {
	return i.ToLogConfigurationRequestPtrOutputWithContext(context.Background())
}

func (i *logConfigurationRequestPtrType) ToLogConfigurationRequestPtrOutputWithContext(ctx context.Context) LogConfigurationRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationRequestPtrOutput)
}

type LogConfigurationRequestOutput struct{ *pulumi.OutputState }

func (LogConfigurationRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationRequest)(nil)).Elem()
}

func (o LogConfigurationRequestOutput) ToLogConfigurationRequestOutput() LogConfigurationRequestOutput {
	return o
}

func (o LogConfigurationRequestOutput) ToLogConfigurationRequestOutputWithContext(ctx context.Context) LogConfigurationRequestOutput {
	return o
}

func (o LogConfigurationRequestOutput) ToLogConfigurationRequestPtrOutput() LogConfigurationRequestPtrOutput {
	return o.ToLogConfigurationRequestPtrOutputWithContext(context.Background())
}

func (o LogConfigurationRequestOutput) ToLogConfigurationRequestPtrOutputWithContext(ctx context.Context) LogConfigurationRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigurationRequest) *LogConfigurationRequest {
		return &v
	}).(LogConfigurationRequestPtrOutput)
}

// Whether to encrypt request payloads.
func (o LogConfigurationRequestOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LogConfigurationRequest) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

// Maximum size of request payloads to log.
func (o LogConfigurationRequestOutput) MaxPayloadSize() pulumi.IntOutput {
	return o.ApplyT(func(v LogConfigurationRequest) int { return v.MaxPayloadSize }).(pulumi.IntOutput)
}

// SQL logging configuration for requests.
func (o LogConfigurationRequestOutput) Sql() LogConfigurationRequestSqlPtrOutput {
	return o.ApplyT(func(v LogConfigurationRequest) *LogConfigurationRequestSql { return v.Sql }).(LogConfigurationRequestSqlPtrOutput)
}

type LogConfigurationRequestPtrOutput struct{ *pulumi.OutputState }

func (LogConfigurationRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationRequest)(nil)).Elem()
}

func (o LogConfigurationRequestPtrOutput) ToLogConfigurationRequestPtrOutput() LogConfigurationRequestPtrOutput {
	return o
}

func (o LogConfigurationRequestPtrOutput) ToLogConfigurationRequestPtrOutputWithContext(ctx context.Context) LogConfigurationRequestPtrOutput {
	return o
}

func (o LogConfigurationRequestPtrOutput) Elem() LogConfigurationRequestOutput {
	return o.ApplyT(func(v *LogConfigurationRequest) LogConfigurationRequest {
		if v != nil {
			return *v
		}
		var ret LogConfigurationRequest
		return ret
	}).(LogConfigurationRequestOutput)
}

// Whether to encrypt request payloads.
func (o LogConfigurationRequestPtrOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogConfigurationRequest) *bool {
		if v == nil {
			return nil
		}
		return &v.Encrypt
	}).(pulumi.BoolPtrOutput)
}

// Maximum size of request payloads to log.
func (o LogConfigurationRequestPtrOutput) MaxPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogConfigurationRequest) *int {
		if v == nil {
			return nil
		}
		return &v.MaxPayloadSize
	}).(pulumi.IntPtrOutput)
}

// SQL logging configuration for requests.
func (o LogConfigurationRequestPtrOutput) Sql() LogConfigurationRequestSqlPtrOutput {
	return o.ApplyT(func(v *LogConfigurationRequest) *LogConfigurationRequestSql {
		if v == nil {
			return nil
		}
		return v.Sql
	}).(LogConfigurationRequestSqlPtrOutput)
}

type LogConfigurationRequestSql struct {
	// Whether to encrypt SQL queries in logs.
	Encrypt bool `pulumi:"encrypt"`
	// Whether to obfuscate SQL queries in logs.
	StripValues bool `pulumi:"stripValues"`
}

// LogConfigurationRequestSqlInput is an input type that accepts LogConfigurationRequestSqlArgs and LogConfigurationRequestSqlOutput values.
// You can construct a concrete instance of `LogConfigurationRequestSqlInput` via:
//
//	LogConfigurationRequestSqlArgs{...}
type LogConfigurationRequestSqlInput interface {
	pulumi.Input

	ToLogConfigurationRequestSqlOutput() LogConfigurationRequestSqlOutput
	ToLogConfigurationRequestSqlOutputWithContext(context.Context) LogConfigurationRequestSqlOutput
}

type LogConfigurationRequestSqlArgs struct {
	// Whether to encrypt SQL queries in logs.
	Encrypt pulumi.BoolInput `pulumi:"encrypt"`
	// Whether to obfuscate SQL queries in logs.
	StripValues pulumi.BoolInput `pulumi:"stripValues"`
}

func (LogConfigurationRequestSqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationRequestSql)(nil)).Elem()
}

func (i LogConfigurationRequestSqlArgs) ToLogConfigurationRequestSqlOutput() LogConfigurationRequestSqlOutput {
	return i.ToLogConfigurationRequestSqlOutputWithContext(context.Background())
}

func (i LogConfigurationRequestSqlArgs) ToLogConfigurationRequestSqlOutputWithContext(ctx context.Context) LogConfigurationRequestSqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationRequestSqlOutput)
}

func (i LogConfigurationRequestSqlArgs) ToLogConfigurationRequestSqlPtrOutput() LogConfigurationRequestSqlPtrOutput {
	return i.ToLogConfigurationRequestSqlPtrOutputWithContext(context.Background())
}

func (i LogConfigurationRequestSqlArgs) ToLogConfigurationRequestSqlPtrOutputWithContext(ctx context.Context) LogConfigurationRequestSqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationRequestSqlOutput).ToLogConfigurationRequestSqlPtrOutputWithContext(ctx)
}

// LogConfigurationRequestSqlPtrInput is an input type that accepts LogConfigurationRequestSqlArgs, LogConfigurationRequestSqlPtr and LogConfigurationRequestSqlPtrOutput values.
// You can construct a concrete instance of `LogConfigurationRequestSqlPtrInput` via:
//
//	        LogConfigurationRequestSqlArgs{...}
//
//	or:
//
//	        nil
type LogConfigurationRequestSqlPtrInput interface {
	pulumi.Input

	ToLogConfigurationRequestSqlPtrOutput() LogConfigurationRequestSqlPtrOutput
	ToLogConfigurationRequestSqlPtrOutputWithContext(context.Context) LogConfigurationRequestSqlPtrOutput
}

type logConfigurationRequestSqlPtrType LogConfigurationRequestSqlArgs

func LogConfigurationRequestSqlPtr(v *LogConfigurationRequestSqlArgs) LogConfigurationRequestSqlPtrInput {
	return (*logConfigurationRequestSqlPtrType)(v)
}

func (*logConfigurationRequestSqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationRequestSql)(nil)).Elem()
}

func (i *logConfigurationRequestSqlPtrType) ToLogConfigurationRequestSqlPtrOutput() LogConfigurationRequestSqlPtrOutput {
	return i.ToLogConfigurationRequestSqlPtrOutputWithContext(context.Background())
}

func (i *logConfigurationRequestSqlPtrType) ToLogConfigurationRequestSqlPtrOutputWithContext(ctx context.Context) LogConfigurationRequestSqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationRequestSqlPtrOutput)
}

type LogConfigurationRequestSqlOutput struct{ *pulumi.OutputState }

func (LogConfigurationRequestSqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationRequestSql)(nil)).Elem()
}

func (o LogConfigurationRequestSqlOutput) ToLogConfigurationRequestSqlOutput() LogConfigurationRequestSqlOutput {
	return o
}

func (o LogConfigurationRequestSqlOutput) ToLogConfigurationRequestSqlOutputWithContext(ctx context.Context) LogConfigurationRequestSqlOutput {
	return o
}

func (o LogConfigurationRequestSqlOutput) ToLogConfigurationRequestSqlPtrOutput() LogConfigurationRequestSqlPtrOutput {
	return o.ToLogConfigurationRequestSqlPtrOutputWithContext(context.Background())
}

func (o LogConfigurationRequestSqlOutput) ToLogConfigurationRequestSqlPtrOutputWithContext(ctx context.Context) LogConfigurationRequestSqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigurationRequestSql) *LogConfigurationRequestSql {
		return &v
	}).(LogConfigurationRequestSqlPtrOutput)
}

// Whether to encrypt SQL queries in logs.
func (o LogConfigurationRequestSqlOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LogConfigurationRequestSql) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

// Whether to obfuscate SQL queries in logs.
func (o LogConfigurationRequestSqlOutput) StripValues() pulumi.BoolOutput {
	return o.ApplyT(func(v LogConfigurationRequestSql) bool { return v.StripValues }).(pulumi.BoolOutput)
}

type LogConfigurationRequestSqlPtrOutput struct{ *pulumi.OutputState }

func (LogConfigurationRequestSqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationRequestSql)(nil)).Elem()
}

func (o LogConfigurationRequestSqlPtrOutput) ToLogConfigurationRequestSqlPtrOutput() LogConfigurationRequestSqlPtrOutput {
	return o
}

func (o LogConfigurationRequestSqlPtrOutput) ToLogConfigurationRequestSqlPtrOutputWithContext(ctx context.Context) LogConfigurationRequestSqlPtrOutput {
	return o
}

func (o LogConfigurationRequestSqlPtrOutput) Elem() LogConfigurationRequestSqlOutput {
	return o.ApplyT(func(v *LogConfigurationRequestSql) LogConfigurationRequestSql {
		if v != nil {
			return *v
		}
		var ret LogConfigurationRequestSql
		return ret
	}).(LogConfigurationRequestSqlOutput)
}

// Whether to encrypt SQL queries in logs.
func (o LogConfigurationRequestSqlPtrOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogConfigurationRequestSql) *bool {
		if v == nil {
			return nil
		}
		return &v.Encrypt
	}).(pulumi.BoolPtrOutput)
}

// Whether to obfuscate SQL queries in logs.
func (o LogConfigurationRequestSqlPtrOutput) StripValues() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogConfigurationRequestSql) *bool {
		if v == nil {
			return nil
		}
		return &v.StripValues
	}).(pulumi.BoolPtrOutput)
}

type LogConfigurationResponse struct {
	// Whether to encrypt response payloads.
	Encrypt bool `pulumi:"encrypt"`
	// Maximum size of response payloads to log.
	MaxPayloadSize int `pulumi:"maxPayloadSize"`
}

// LogConfigurationResponseInput is an input type that accepts LogConfigurationResponseArgs and LogConfigurationResponseOutput values.
// You can construct a concrete instance of `LogConfigurationResponseInput` via:
//
//	LogConfigurationResponseArgs{...}
type LogConfigurationResponseInput interface {
	pulumi.Input

	ToLogConfigurationResponseOutput() LogConfigurationResponseOutput
	ToLogConfigurationResponseOutputWithContext(context.Context) LogConfigurationResponseOutput
}

type LogConfigurationResponseArgs struct {
	// Whether to encrypt response payloads.
	Encrypt pulumi.BoolInput `pulumi:"encrypt"`
	// Maximum size of response payloads to log.
	MaxPayloadSize pulumi.IntInput `pulumi:"maxPayloadSize"`
}

func (LogConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationResponse)(nil)).Elem()
}

func (i LogConfigurationResponseArgs) ToLogConfigurationResponseOutput() LogConfigurationResponseOutput {
	return i.ToLogConfigurationResponseOutputWithContext(context.Background())
}

func (i LogConfigurationResponseArgs) ToLogConfigurationResponseOutputWithContext(ctx context.Context) LogConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationResponseOutput)
}

func (i LogConfigurationResponseArgs) ToLogConfigurationResponsePtrOutput() LogConfigurationResponsePtrOutput {
	return i.ToLogConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i LogConfigurationResponseArgs) ToLogConfigurationResponsePtrOutputWithContext(ctx context.Context) LogConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationResponseOutput).ToLogConfigurationResponsePtrOutputWithContext(ctx)
}

// LogConfigurationResponsePtrInput is an input type that accepts LogConfigurationResponseArgs, LogConfigurationResponsePtr and LogConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `LogConfigurationResponsePtrInput` via:
//
//	        LogConfigurationResponseArgs{...}
//
//	or:
//
//	        nil
type LogConfigurationResponsePtrInput interface {
	pulumi.Input

	ToLogConfigurationResponsePtrOutput() LogConfigurationResponsePtrOutput
	ToLogConfigurationResponsePtrOutputWithContext(context.Context) LogConfigurationResponsePtrOutput
}

type logConfigurationResponsePtrType LogConfigurationResponseArgs

func LogConfigurationResponsePtr(v *LogConfigurationResponseArgs) LogConfigurationResponsePtrInput {
	return (*logConfigurationResponsePtrType)(v)
}

func (*logConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationResponse)(nil)).Elem()
}

func (i *logConfigurationResponsePtrType) ToLogConfigurationResponsePtrOutput() LogConfigurationResponsePtrOutput {
	return i.ToLogConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *logConfigurationResponsePtrType) ToLogConfigurationResponsePtrOutputWithContext(ctx context.Context) LogConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationResponsePtrOutput)
}

type LogConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LogConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationResponse)(nil)).Elem()
}

func (o LogConfigurationResponseOutput) ToLogConfigurationResponseOutput() LogConfigurationResponseOutput {
	return o
}

func (o LogConfigurationResponseOutput) ToLogConfigurationResponseOutputWithContext(ctx context.Context) LogConfigurationResponseOutput {
	return o
}

func (o LogConfigurationResponseOutput) ToLogConfigurationResponsePtrOutput() LogConfigurationResponsePtrOutput {
	return o.ToLogConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o LogConfigurationResponseOutput) ToLogConfigurationResponsePtrOutputWithContext(ctx context.Context) LogConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigurationResponse) *LogConfigurationResponse {
		return &v
	}).(LogConfigurationResponsePtrOutput)
}

// Whether to encrypt response payloads.
func (o LogConfigurationResponseOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LogConfigurationResponse) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

// Maximum size of response payloads to log.
func (o LogConfigurationResponseOutput) MaxPayloadSize() pulumi.IntOutput {
	return o.ApplyT(func(v LogConfigurationResponse) int { return v.MaxPayloadSize }).(pulumi.IntOutput)
}

type LogConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (LogConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationResponse)(nil)).Elem()
}

func (o LogConfigurationResponsePtrOutput) ToLogConfigurationResponsePtrOutput() LogConfigurationResponsePtrOutput {
	return o
}

func (o LogConfigurationResponsePtrOutput) ToLogConfigurationResponsePtrOutputWithContext(ctx context.Context) LogConfigurationResponsePtrOutput {
	return o
}

func (o LogConfigurationResponsePtrOutput) Elem() LogConfigurationResponseOutput {
	return o.ApplyT(func(v *LogConfigurationResponse) LogConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret LogConfigurationResponse
		return ret
	}).(LogConfigurationResponseOutput)
}

// Whether to encrypt response payloads.
func (o LogConfigurationResponsePtrOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Encrypt
	}).(pulumi.BoolPtrOutput)
}

// Maximum size of response payloads to log.
func (o LogConfigurationResponsePtrOutput) MaxPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxPayloadSize
	}).(pulumi.IntPtrOutput)
}

type LogConfigurationScope struct {
	// The ID of the connector (required when type is connector).
	ConnectorId *string `pulumi:"connectorId"`
	// The ID of the resource (required when type is resource).
	ResourceId *string `pulumi:"resourceId"`
	// The ID of the space (required when type is space).
	SpaceId *string `pulumi:"spaceId"`
	// The type of scope (resource, connector, space, org).
	Type string `pulumi:"type"`
}

// LogConfigurationScopeInput is an input type that accepts LogConfigurationScopeArgs and LogConfigurationScopeOutput values.
// You can construct a concrete instance of `LogConfigurationScopeInput` via:
//
//	LogConfigurationScopeArgs{...}
type LogConfigurationScopeInput interface {
	pulumi.Input

	ToLogConfigurationScopeOutput() LogConfigurationScopeOutput
	ToLogConfigurationScopeOutputWithContext(context.Context) LogConfigurationScopeOutput
}

type LogConfigurationScopeArgs struct {
	// The ID of the connector (required when type is connector).
	ConnectorId pulumi.StringPtrInput `pulumi:"connectorId"`
	// The ID of the resource (required when type is resource).
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The ID of the space (required when type is space).
	SpaceId pulumi.StringPtrInput `pulumi:"spaceId"`
	// The type of scope (resource, connector, space, org).
	Type pulumi.StringInput `pulumi:"type"`
}

func (LogConfigurationScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationScope)(nil)).Elem()
}

func (i LogConfigurationScopeArgs) ToLogConfigurationScopeOutput() LogConfigurationScopeOutput {
	return i.ToLogConfigurationScopeOutputWithContext(context.Background())
}

func (i LogConfigurationScopeArgs) ToLogConfigurationScopeOutputWithContext(ctx context.Context) LogConfigurationScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationScopeOutput)
}

func (i LogConfigurationScopeArgs) ToLogConfigurationScopePtrOutput() LogConfigurationScopePtrOutput {
	return i.ToLogConfigurationScopePtrOutputWithContext(context.Background())
}

func (i LogConfigurationScopeArgs) ToLogConfigurationScopePtrOutputWithContext(ctx context.Context) LogConfigurationScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationScopeOutput).ToLogConfigurationScopePtrOutputWithContext(ctx)
}

// LogConfigurationScopePtrInput is an input type that accepts LogConfigurationScopeArgs, LogConfigurationScopePtr and LogConfigurationScopePtrOutput values.
// You can construct a concrete instance of `LogConfigurationScopePtrInput` via:
//
//	        LogConfigurationScopeArgs{...}
//
//	or:
//
//	        nil
type LogConfigurationScopePtrInput interface {
	pulumi.Input

	ToLogConfigurationScopePtrOutput() LogConfigurationScopePtrOutput
	ToLogConfigurationScopePtrOutputWithContext(context.Context) LogConfigurationScopePtrOutput
}

type logConfigurationScopePtrType LogConfigurationScopeArgs

func LogConfigurationScopePtr(v *LogConfigurationScopeArgs) LogConfigurationScopePtrInput {
	return (*logConfigurationScopePtrType)(v)
}

func (*logConfigurationScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationScope)(nil)).Elem()
}

func (i *logConfigurationScopePtrType) ToLogConfigurationScopePtrOutput() LogConfigurationScopePtrOutput {
	return i.ToLogConfigurationScopePtrOutputWithContext(context.Background())
}

func (i *logConfigurationScopePtrType) ToLogConfigurationScopePtrOutputWithContext(ctx context.Context) LogConfigurationScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationScopePtrOutput)
}

type LogConfigurationScopeOutput struct{ *pulumi.OutputState }

func (LogConfigurationScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationScope)(nil)).Elem()
}

func (o LogConfigurationScopeOutput) ToLogConfigurationScopeOutput() LogConfigurationScopeOutput {
	return o
}

func (o LogConfigurationScopeOutput) ToLogConfigurationScopeOutputWithContext(ctx context.Context) LogConfigurationScopeOutput {
	return o
}

func (o LogConfigurationScopeOutput) ToLogConfigurationScopePtrOutput() LogConfigurationScopePtrOutput {
	return o.ToLogConfigurationScopePtrOutputWithContext(context.Background())
}

func (o LogConfigurationScopeOutput) ToLogConfigurationScopePtrOutputWithContext(ctx context.Context) LogConfigurationScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigurationScope) *LogConfigurationScope {
		return &v
	}).(LogConfigurationScopePtrOutput)
}

// The ID of the connector (required when type is connector).
func (o LogConfigurationScopeOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogConfigurationScope) *string { return v.ConnectorId }).(pulumi.StringPtrOutput)
}

// The ID of the resource (required when type is resource).
func (o LogConfigurationScopeOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogConfigurationScope) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The ID of the space (required when type is space).
func (o LogConfigurationScopeOutput) SpaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogConfigurationScope) *string { return v.SpaceId }).(pulumi.StringPtrOutput)
}

// The type of scope (resource, connector, space, org).
func (o LogConfigurationScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LogConfigurationScope) string { return v.Type }).(pulumi.StringOutput)
}

type LogConfigurationScopePtrOutput struct{ *pulumi.OutputState }

func (LogConfigurationScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationScope)(nil)).Elem()
}

func (o LogConfigurationScopePtrOutput) ToLogConfigurationScopePtrOutput() LogConfigurationScopePtrOutput {
	return o
}

func (o LogConfigurationScopePtrOutput) ToLogConfigurationScopePtrOutputWithContext(ctx context.Context) LogConfigurationScopePtrOutput {
	return o
}

func (o LogConfigurationScopePtrOutput) Elem() LogConfigurationScopeOutput {
	return o.ApplyT(func(v *LogConfigurationScope) LogConfigurationScope {
		if v != nil {
			return *v
		}
		var ret LogConfigurationScope
		return ret
	}).(LogConfigurationScopeOutput)
}

// The ID of the connector (required when type is connector).
func (o LogConfigurationScopePtrOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogConfigurationScope) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorId
	}).(pulumi.StringPtrOutput)
}

// The ID of the resource (required when type is resource).
func (o LogConfigurationScopePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogConfigurationScope) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// The ID of the space (required when type is space).
func (o LogConfigurationScopePtrOutput) SpaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogConfigurationScope) *string {
		if v == nil {
			return nil
		}
		return v.SpaceId
	}).(pulumi.StringPtrOutput)
}

// The type of scope (resource, connector, space, org).
func (o LogConfigurationScopePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogConfigurationScope) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LogConfigurationStream struct {
	// Whether to encrypt stream data.
	Encrypt bool `pulumi:"encrypt"`
}

// LogConfigurationStreamInput is an input type that accepts LogConfigurationStreamArgs and LogConfigurationStreamOutput values.
// You can construct a concrete instance of `LogConfigurationStreamInput` via:
//
//	LogConfigurationStreamArgs{...}
type LogConfigurationStreamInput interface {
	pulumi.Input

	ToLogConfigurationStreamOutput() LogConfigurationStreamOutput
	ToLogConfigurationStreamOutputWithContext(context.Context) LogConfigurationStreamOutput
}

type LogConfigurationStreamArgs struct {
	// Whether to encrypt stream data.
	Encrypt pulumi.BoolInput `pulumi:"encrypt"`
}

func (LogConfigurationStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationStream)(nil)).Elem()
}

func (i LogConfigurationStreamArgs) ToLogConfigurationStreamOutput() LogConfigurationStreamOutput {
	return i.ToLogConfigurationStreamOutputWithContext(context.Background())
}

func (i LogConfigurationStreamArgs) ToLogConfigurationStreamOutputWithContext(ctx context.Context) LogConfigurationStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationStreamOutput)
}

func (i LogConfigurationStreamArgs) ToLogConfigurationStreamPtrOutput() LogConfigurationStreamPtrOutput {
	return i.ToLogConfigurationStreamPtrOutputWithContext(context.Background())
}

func (i LogConfigurationStreamArgs) ToLogConfigurationStreamPtrOutputWithContext(ctx context.Context) LogConfigurationStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationStreamOutput).ToLogConfigurationStreamPtrOutputWithContext(ctx)
}

// LogConfigurationStreamPtrInput is an input type that accepts LogConfigurationStreamArgs, LogConfigurationStreamPtr and LogConfigurationStreamPtrOutput values.
// You can construct a concrete instance of `LogConfigurationStreamPtrInput` via:
//
//	        LogConfigurationStreamArgs{...}
//
//	or:
//
//	        nil
type LogConfigurationStreamPtrInput interface {
	pulumi.Input

	ToLogConfigurationStreamPtrOutput() LogConfigurationStreamPtrOutput
	ToLogConfigurationStreamPtrOutputWithContext(context.Context) LogConfigurationStreamPtrOutput
}

type logConfigurationStreamPtrType LogConfigurationStreamArgs

func LogConfigurationStreamPtr(v *LogConfigurationStreamArgs) LogConfigurationStreamPtrInput {
	return (*logConfigurationStreamPtrType)(v)
}

func (*logConfigurationStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationStream)(nil)).Elem()
}

func (i *logConfigurationStreamPtrType) ToLogConfigurationStreamPtrOutput() LogConfigurationStreamPtrOutput {
	return i.ToLogConfigurationStreamPtrOutputWithContext(context.Background())
}

func (i *logConfigurationStreamPtrType) ToLogConfigurationStreamPtrOutputWithContext(ctx context.Context) LogConfigurationStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogConfigurationStreamPtrOutput)
}

type LogConfigurationStreamOutput struct{ *pulumi.OutputState }

func (LogConfigurationStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigurationStream)(nil)).Elem()
}

func (o LogConfigurationStreamOutput) ToLogConfigurationStreamOutput() LogConfigurationStreamOutput {
	return o
}

func (o LogConfigurationStreamOutput) ToLogConfigurationStreamOutputWithContext(ctx context.Context) LogConfigurationStreamOutput {
	return o
}

func (o LogConfigurationStreamOutput) ToLogConfigurationStreamPtrOutput() LogConfigurationStreamPtrOutput {
	return o.ToLogConfigurationStreamPtrOutputWithContext(context.Background())
}

func (o LogConfigurationStreamOutput) ToLogConfigurationStreamPtrOutputWithContext(ctx context.Context) LogConfigurationStreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigurationStream) *LogConfigurationStream {
		return &v
	}).(LogConfigurationStreamPtrOutput)
}

// Whether to encrypt stream data.
func (o LogConfigurationStreamOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LogConfigurationStream) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

type LogConfigurationStreamPtrOutput struct{ *pulumi.OutputState }

func (LogConfigurationStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigurationStream)(nil)).Elem()
}

func (o LogConfigurationStreamPtrOutput) ToLogConfigurationStreamPtrOutput() LogConfigurationStreamPtrOutput {
	return o
}

func (o LogConfigurationStreamPtrOutput) ToLogConfigurationStreamPtrOutputWithContext(ctx context.Context) LogConfigurationStreamPtrOutput {
	return o
}

func (o LogConfigurationStreamPtrOutput) Elem() LogConfigurationStreamOutput {
	return o.ApplyT(func(v *LogConfigurationStream) LogConfigurationStream {
		if v != nil {
			return *v
		}
		var ret LogConfigurationStream
		return ret
	}).(LogConfigurationStreamOutput)
}

// Whether to encrypt stream data.
func (o LogConfigurationStreamPtrOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogConfigurationStream) *bool {
		if v == nil {
			return nil
		}
		return &v.Encrypt
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataDomainOwnerInput)(nil)).Elem(), DataDomainOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataDomainOwnerArrayInput)(nil)).Elem(), DataDomainOwnerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationBiMetabaseInput)(nil)).Elem(), IntegrationBiMetabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationBiMetabasePtrInput)(nil)).Elem(), IntegrationBiMetabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationCloudAwsInput)(nil)).Elem(), IntegrationCloudAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationCloudAwsPtrInput)(nil)).Elem(), IntegrationCloudAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationDataCatalogDatahubInput)(nil)).Elem(), IntegrationDataCatalogDatahubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationDataCatalogDatahubPtrInput)(nil)).Elem(), IntegrationDataCatalogDatahubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLogAwsS3Input)(nil)).Elem(), IntegrationLogAwsS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLogAwsS3PtrInput)(nil)).Elem(), IntegrationLogAwsS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLogDatadogInput)(nil)).Elem(), IntegrationLogDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLogDatadogPtrInput)(nil)).Elem(), IntegrationLogDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLogSplunkInput)(nil)).Elem(), IntegrationLogSplunkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLogSplunkPtrInput)(nil)).Elem(), IntegrationLogSplunkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationMdmKandjiInput)(nil)).Elem(), IntegrationMdmKandjiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationMdmKandjiPtrInput)(nil)).Elem(), IntegrationMdmKandjiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationMfaDuoInput)(nil)).Elem(), IntegrationMfaDuoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationMfaDuoPtrInput)(nil)).Elem(), IntegrationMfaDuoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationRequestInput)(nil)).Elem(), LogConfigurationRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationRequestPtrInput)(nil)).Elem(), LogConfigurationRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationRequestSqlInput)(nil)).Elem(), LogConfigurationRequestSqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationRequestSqlPtrInput)(nil)).Elem(), LogConfigurationRequestSqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationResponseInput)(nil)).Elem(), LogConfigurationResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationResponsePtrInput)(nil)).Elem(), LogConfigurationResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationScopeInput)(nil)).Elem(), LogConfigurationScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationScopePtrInput)(nil)).Elem(), LogConfigurationScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationStreamInput)(nil)).Elem(), LogConfigurationStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigurationStreamPtrInput)(nil)).Elem(), LogConfigurationStreamArgs{})
	pulumi.RegisterOutputType(DataDomainOwnerOutput{})
	pulumi.RegisterOutputType(DataDomainOwnerArrayOutput{})
	pulumi.RegisterOutputType(IntegrationBiMetabaseOutput{})
	pulumi.RegisterOutputType(IntegrationBiMetabasePtrOutput{})
	pulumi.RegisterOutputType(IntegrationCloudAwsOutput{})
	pulumi.RegisterOutputType(IntegrationCloudAwsPtrOutput{})
	pulumi.RegisterOutputType(IntegrationDataCatalogDatahubOutput{})
	pulumi.RegisterOutputType(IntegrationDataCatalogDatahubPtrOutput{})
	pulumi.RegisterOutputType(IntegrationLogAwsS3Output{})
	pulumi.RegisterOutputType(IntegrationLogAwsS3PtrOutput{})
	pulumi.RegisterOutputType(IntegrationLogDatadogOutput{})
	pulumi.RegisterOutputType(IntegrationLogDatadogPtrOutput{})
	pulumi.RegisterOutputType(IntegrationLogSplunkOutput{})
	pulumi.RegisterOutputType(IntegrationLogSplunkPtrOutput{})
	pulumi.RegisterOutputType(IntegrationMdmKandjiOutput{})
	pulumi.RegisterOutputType(IntegrationMdmKandjiPtrOutput{})
	pulumi.RegisterOutputType(IntegrationMfaDuoOutput{})
	pulumi.RegisterOutputType(IntegrationMfaDuoPtrOutput{})
	pulumi.RegisterOutputType(LogConfigurationRequestOutput{})
	pulumi.RegisterOutputType(LogConfigurationRequestPtrOutput{})
	pulumi.RegisterOutputType(LogConfigurationRequestSqlOutput{})
	pulumi.RegisterOutputType(LogConfigurationRequestSqlPtrOutput{})
	pulumi.RegisterOutputType(LogConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LogConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(LogConfigurationScopeOutput{})
	pulumi.RegisterOutputType(LogConfigurationScopePtrOutput{})
	pulumi.RegisterOutputType(LogConfigurationStreamOutput{})
	pulumi.RegisterOutputType(LogConfigurationStreamPtrOutput{})
}
