// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Formal.Pulumi
{
    /// <summary>
    /// Registering a Data Discovery with Formal.
    /// </summary>
    [PulumiResourceType("formal:index/dataDiscovery:DataDiscovery")]
    public partial class DataDiscovery : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation time of the Data Discovery.
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Deletion policy of the Data Discovery. Possible values: `delete`, `mark_for_deletion`.
        /// </summary>
        [Output("deletionPolicy")]
        public Output<string> DeletionPolicy { get; private set; } = null!;

        /// <summary>
        /// Native user ID linked to this Data Discovery.
        /// </summary>
        [Output("nativeUserId")]
        public Output<string> NativeUserId { get; private set; } = null!;

        /// <summary>
        /// Path of the inventory object.
        /// </summary>
        [Output("path")]
        public Output<string?> Path { get; private set; } = null!;

        /// <summary>
        /// Resource ID linked to this Data Discovery.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// Schedule at which the Data Discovery will be executed. Possible values: `6h`, `12h`, `18h`, `24h` or a valid cron expression, for example `0 4,16 * * *` to run daily at 04:00 and 16:00 UTC.
        /// </summary>
        [Output("schedule")]
        public Output<string> Schedule { get; private set; } = null!;


        /// <summary>
        /// Create a DataDiscovery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataDiscovery(string name, DataDiscoveryArgs args, CustomResourceOptions? options = null)
            : base("formal:index/dataDiscovery:DataDiscovery", name, args ?? new DataDiscoveryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataDiscovery(string name, Input<string> id, DataDiscoveryState? state = null, CustomResourceOptions? options = null)
            : base("formal:index/dataDiscovery:DataDiscovery", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/formalco",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataDiscovery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataDiscovery Get(string name, Input<string> id, DataDiscoveryState? state = null, CustomResourceOptions? options = null)
        {
            return new DataDiscovery(name, id, state, options);
        }
    }

    public sealed class DataDiscoveryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Deletion policy of the Data Discovery. Possible values: `delete`, `mark_for_deletion`.
        /// </summary>
        [Input("deletionPolicy", required: true)]
        public Input<string> DeletionPolicy { get; set; } = null!;

        /// <summary>
        /// Native user ID linked to this Data Discovery.
        /// </summary>
        [Input("nativeUserId", required: true)]
        public Input<string> NativeUserId { get; set; } = null!;

        /// <summary>
        /// Path of the inventory object.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Resource ID linked to this Data Discovery.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// Schedule at which the Data Discovery will be executed. Possible values: `6h`, `12h`, `18h`, `24h` or a valid cron expression, for example `0 4,16 * * *` to run daily at 04:00 and 16:00 UTC.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<string> Schedule { get; set; } = null!;

        public DataDiscoveryArgs()
        {
        }
        public static new DataDiscoveryArgs Empty => new DataDiscoveryArgs();
    }

    public sealed class DataDiscoveryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time of the Data Discovery.
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// Deletion policy of the Data Discovery. Possible values: `delete`, `mark_for_deletion`.
        /// </summary>
        [Input("deletionPolicy")]
        public Input<string>? DeletionPolicy { get; set; }

        /// <summary>
        /// Native user ID linked to this Data Discovery.
        /// </summary>
        [Input("nativeUserId")]
        public Input<string>? NativeUserId { get; set; }

        /// <summary>
        /// Path of the inventory object.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Resource ID linked to this Data Discovery.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// Schedule at which the Data Discovery will be executed. Possible values: `6h`, `12h`, `18h`, `24h` or a valid cron expression, for example `0 4,16 * * *` to run daily at 04:00 and 16:00 UTC.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        public DataDiscoveryState()
        {
        }
        public static new DataDiscoveryState Empty => new DataDiscoveryState();
    }
}
