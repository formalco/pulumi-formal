// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Formal
{
    /// <summary>
    /// Registering a Integration Logs app.
    /// </summary>
    [FormalResourceType("formal:index/integrationLog:IntegrationLog")]
    public partial class IntegrationLog : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration block for AWS S3 integration.
        /// </summary>
        [Output("awsS3")]
        public Output<Outputs.IntegrationLogAwsS3?> AwsS3 { get; private set; } = null!;

        /// <summary>
        /// Configuration block for Datadog integration.
        /// </summary>
        [Output("datadog")]
        public Output<Outputs.IntegrationLogDatadog?> Datadog { get; private set; } = null!;

        /// <summary>
        /// Friendly name for the Integration app.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configuration block for Splunk integration.
        /// </summary>
        [Output("splunk")]
        public Output<Outputs.IntegrationLogSplunk?> Splunk { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationLog resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationLog(string name, IntegrationLogArgs? args = null, CustomResourceOptions? options = null)
            : base("formal:index/integrationLog:IntegrationLog", name, args ?? new IntegrationLogArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationLog(string name, Input<string> id, IntegrationLogState? state = null, CustomResourceOptions? options = null)
            : base("formal:index/integrationLog:IntegrationLog", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationLog resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationLog Get(string name, Input<string> id, IntegrationLogState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationLog(name, id, state, options);
        }
    }

    public sealed class IntegrationLogArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block for AWS S3 integration.
        /// </summary>
        [Input("awsS3")]
        public Input<Inputs.IntegrationLogAwsS3Args>? AwsS3 { get; set; }

        /// <summary>
        /// Configuration block for Datadog integration.
        /// </summary>
        [Input("datadog")]
        public Input<Inputs.IntegrationLogDatadogArgs>? Datadog { get; set; }

        /// <summary>
        /// Friendly name for the Integration app.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configuration block for Splunk integration.
        /// </summary>
        [Input("splunk")]
        public Input<Inputs.IntegrationLogSplunkArgs>? Splunk { get; set; }

        public IntegrationLogArgs()
        {
        }
        public static new IntegrationLogArgs Empty => new IntegrationLogArgs();
    }

    public sealed class IntegrationLogState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block for AWS S3 integration.
        /// </summary>
        [Input("awsS3")]
        public Input<Inputs.IntegrationLogAwsS3GetArgs>? AwsS3 { get; set; }

        /// <summary>
        /// Configuration block for Datadog integration.
        /// </summary>
        [Input("datadog")]
        public Input<Inputs.IntegrationLogDatadogGetArgs>? Datadog { get; set; }

        /// <summary>
        /// Friendly name for the Integration app.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configuration block for Splunk integration.
        /// </summary>
        [Input("splunk")]
        public Input<Inputs.IntegrationLogSplunkGetArgs>? Splunk { get; set; }

        public IntegrationLogState()
        {
        }
        public static new IntegrationLogState Empty => new IntegrationLogState();
    }
}
