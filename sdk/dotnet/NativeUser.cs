// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Formal.Pulumi
{
    /// <summary>
    /// This resource creates a Native User.
    /// </summary>
    [PulumiResourceType("formal:index/nativeUser:NativeUser")]
    public partial class NativeUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The username of the Native User.
        /// </summary>
        [Output("nativeUserId")]
        public Output<string> NativeUserId { get; private set; } = null!;

        /// <summary>
        /// The password of the Native User.
        /// </summary>
        [Output("nativeUserSecret")]
        public Output<string> NativeUserSecret { get; private set; } = null!;

        /// <summary>
        /// The Sidecar ID for the resource this Native User is for.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// If set to true, this Native User cannot be deleted.
        /// </summary>
        [Output("terminationProtection")]
        public Output<bool?> TerminationProtection { get; private set; } = null!;

        /// <summary>
        /// The password of the Native User.
        /// </summary>
        [Output("useAsDefault")]
        public Output<bool?> UseAsDefault { get; private set; } = null!;


        /// <summary>
        /// Create a NativeUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NativeUser(string name, NativeUserArgs args, CustomResourceOptions? options = null)
            : base("formal:index/nativeUser:NativeUser", name, args ?? new NativeUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NativeUser(string name, Input<string> id, NativeUserState? state = null, CustomResourceOptions? options = null)
            : base("formal:index/nativeUser:NativeUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/formalco",
                AdditionalSecretOutputs =
                {
                    "nativeUserSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NativeUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NativeUser Get(string name, Input<string> id, NativeUserState? state = null, CustomResourceOptions? options = null)
        {
            return new NativeUser(name, id, state, options);
        }
    }

    public sealed class NativeUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The username of the Native User.
        /// </summary>
        [Input("nativeUserId", required: true)]
        public Input<string> NativeUserId { get; set; } = null!;

        [Input("nativeUserSecret", required: true)]
        private Input<string>? _nativeUserSecret;

        /// <summary>
        /// The password of the Native User.
        /// </summary>
        public Input<string>? NativeUserSecret
        {
            get => _nativeUserSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _nativeUserSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The Sidecar ID for the resource this Native User is for.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// If set to true, this Native User cannot be deleted.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// The password of the Native User.
        /// </summary>
        [Input("useAsDefault")]
        public Input<bool>? UseAsDefault { get; set; }

        public NativeUserArgs()
        {
        }
        public static new NativeUserArgs Empty => new NativeUserArgs();
    }

    public sealed class NativeUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The username of the Native User.
        /// </summary>
        [Input("nativeUserId")]
        public Input<string>? NativeUserId { get; set; }

        [Input("nativeUserSecret")]
        private Input<string>? _nativeUserSecret;

        /// <summary>
        /// The password of the Native User.
        /// </summary>
        public Input<string>? NativeUserSecret
        {
            get => _nativeUserSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _nativeUserSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The Sidecar ID for the resource this Native User is for.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// If set to true, this Native User cannot be deleted.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// The password of the Native User.
        /// </summary>
        [Input("useAsDefault")]
        public Input<bool>? UseAsDefault { get; set; }

        public NativeUserState()
        {
        }
        public static new NativeUserState Empty => new NativeUserState();
    }
}
