// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Formal
{
    /// <summary>
    /// Linking a User to a Group in Formal.
    /// </summary>
    [FormalResourceType("formal:index/groupUserLink:GroupUserLink")]
    public partial class GroupUserLink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Formal ID for the group to be linked.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// If set to true, this Link cannot be deleted.
        /// </summary>
        [Output("terminationProtection")]
        public Output<bool?> TerminationProtection { get; private set; } = null!;

        /// <summary>
        /// The Formal ID of the user to be linked.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a GroupUserLink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupUserLink(string name, GroupUserLinkArgs args, CustomResourceOptions? options = null)
            : base("formal:index/groupUserLink:GroupUserLink", name, args ?? new GroupUserLinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupUserLink(string name, Input<string> id, GroupUserLinkState? state = null, CustomResourceOptions? options = null)
            : base("formal:index/groupUserLink:GroupUserLink", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/formalco",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupUserLink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupUserLink Get(string name, Input<string> id, GroupUserLinkState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupUserLink(name, id, state, options);
        }
    }

    public sealed class GroupUserLinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Formal ID for the group to be linked.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// If set to true, this Link cannot be deleted.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// The Formal ID of the user to be linked.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GroupUserLinkArgs()
        {
        }
        public static new GroupUserLinkArgs Empty => new GroupUserLinkArgs();
    }

    public sealed class GroupUserLinkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Formal ID for the group to be linked.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// If set to true, this Link cannot be deleted.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// The Formal ID of the user to be linked.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public GroupUserLinkState()
        {
        }
        public static new GroupUserLinkState Empty => new GroupUserLinkState();
    }
}
