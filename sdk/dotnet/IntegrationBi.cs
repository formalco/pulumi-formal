// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Formal
{
    /// <summary>
    /// Registering a BI App.
    /// </summary>
    [FormalResourceType("formal:index/integrationBi:IntegrationBi")]
    public partial class IntegrationBi : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration block for Metabase integration. This block is optional and may be omitted if not configuring a Metabase integration.
        /// </summary>
        [Output("metabase")]
        public Output<Outputs.IntegrationBiMetabase?> Metabase { get; private set; } = null!;

        /// <summary>
        /// Friendly name for the App.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Auto synchronize users from Metabase to Formal (occurs every hour). Note that a lambda worker will need to be deployed in your infrastructure to synchronise users.
        /// </summary>
        [Output("sync")]
        public Output<bool> Sync { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationBi resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationBi(string name, IntegrationBiArgs args, CustomResourceOptions? options = null)
            : base("formal:index/integrationBi:IntegrationBi", name, args ?? new IntegrationBiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationBi(string name, Input<string> id, IntegrationBiState? state = null, CustomResourceOptions? options = null)
            : base("formal:index/integrationBi:IntegrationBi", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/formalco",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationBi resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationBi Get(string name, Input<string> id, IntegrationBiState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationBi(name, id, state, options);
        }
    }

    public sealed class IntegrationBiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block for Metabase integration. This block is optional and may be omitted if not configuring a Metabase integration.
        /// </summary>
        [Input("metabase")]
        public Input<Inputs.IntegrationBiMetabaseArgs>? Metabase { get; set; }

        /// <summary>
        /// Friendly name for the App.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Auto synchronize users from Metabase to Formal (occurs every hour). Note that a lambda worker will need to be deployed in your infrastructure to synchronise users.
        /// </summary>
        [Input("sync", required: true)]
        public Input<bool> Sync { get; set; } = null!;

        public IntegrationBiArgs()
        {
        }
        public static new IntegrationBiArgs Empty => new IntegrationBiArgs();
    }

    public sealed class IntegrationBiState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block for Metabase integration. This block is optional and may be omitted if not configuring a Metabase integration.
        /// </summary>
        [Input("metabase")]
        public Input<Inputs.IntegrationBiMetabaseGetArgs>? Metabase { get; set; }

        /// <summary>
        /// Friendly name for the App.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Auto synchronize users from Metabase to Formal (occurs every hour). Note that a lambda worker will need to be deployed in your infrastructure to synchronise users.
        /// </summary>
        [Input("sync")]
        public Input<bool>? Sync { get; set; }

        public IntegrationBiState()
        {
        }
        public static new IntegrationBiState Empty => new IntegrationBiState();
    }
}
