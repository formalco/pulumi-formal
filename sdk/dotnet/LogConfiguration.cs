// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Formal
{
    /// <summary>
    /// Managing Log Configuration with Formal.
    /// </summary>
    [FormalResourceType("formal:index/logConfiguration:LogConfiguration")]
    public partial class LogConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When the log configuration was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The ID of the encryption key to use for this log configuration.
        /// </summary>
        [Output("encryptionKeyId")]
        public Output<string> EncryptionKeyId { get; private set; } = null!;

        /// <summary>
        /// The name of this log configuration.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Request logging configuration.
        /// </summary>
        [Output("request")]
        public Output<Outputs.LogConfigurationRequest> Request { get; private set; } = null!;

        /// <summary>
        /// Response logging configuration.
        /// </summary>
        [Output("response")]
        public Output<Outputs.LogConfigurationResponse> Response { get; private set; } = null!;

        /// <summary>
        /// The scope configuration for this log configuration.
        /// </summary>
        [Output("scope")]
        public Output<Outputs.LogConfigurationScope> Scope { get; private set; } = null!;

        /// <summary>
        /// Stream logging configuration.
        /// </summary>
        [Output("stream")]
        public Output<Outputs.LogConfigurationStream?> Stream { get; private set; } = null!;

        /// <summary>
        /// Last update time.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a LogConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogConfiguration(string name, LogConfigurationArgs args, CustomResourceOptions? options = null)
            : base("formal:index/logConfiguration:LogConfiguration", name, args ?? new LogConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogConfiguration(string name, Input<string> id, LogConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("formal:index/logConfiguration:LogConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/formalco",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogConfiguration Get(string name, Input<string> id, LogConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new LogConfiguration(name, id, state, options);
        }
    }

    public sealed class LogConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the encryption key to use for this log configuration.
        /// </summary>
        [Input("encryptionKeyId", required: true)]
        public Input<string> EncryptionKeyId { get; set; } = null!;

        /// <summary>
        /// The name of this log configuration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Request logging configuration.
        /// </summary>
        [Input("request", required: true)]
        public Input<Inputs.LogConfigurationRequestArgs> Request { get; set; } = null!;

        /// <summary>
        /// Response logging configuration.
        /// </summary>
        [Input("response", required: true)]
        public Input<Inputs.LogConfigurationResponseArgs> Response { get; set; } = null!;

        /// <summary>
        /// The scope configuration for this log configuration.
        /// </summary>
        [Input("scope", required: true)]
        public Input<Inputs.LogConfigurationScopeArgs> Scope { get; set; } = null!;

        /// <summary>
        /// Stream logging configuration.
        /// </summary>
        [Input("stream")]
        public Input<Inputs.LogConfigurationStreamArgs>? Stream { get; set; }

        public LogConfigurationArgs()
        {
        }
        public static new LogConfigurationArgs Empty => new LogConfigurationArgs();
    }

    public sealed class LogConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When the log configuration was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The ID of the encryption key to use for this log configuration.
        /// </summary>
        [Input("encryptionKeyId")]
        public Input<string>? EncryptionKeyId { get; set; }

        /// <summary>
        /// The name of this log configuration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Request logging configuration.
        /// </summary>
        [Input("request")]
        public Input<Inputs.LogConfigurationRequestGetArgs>? Request { get; set; }

        /// <summary>
        /// Response logging configuration.
        /// </summary>
        [Input("response")]
        public Input<Inputs.LogConfigurationResponseGetArgs>? Response { get; set; }

        /// <summary>
        /// The scope configuration for this log configuration.
        /// </summary>
        [Input("scope")]
        public Input<Inputs.LogConfigurationScopeGetArgs>? Scope { get; set; }

        /// <summary>
        /// Stream logging configuration.
        /// </summary>
        [Input("stream")]
        public Input<Inputs.LogConfigurationStreamGetArgs>? Stream { get; set; }

        /// <summary>
        /// Last update time.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public LogConfigurationState()
        {
        }
        public static new LogConfigurationState Empty => new LogConfigurationState();
    }
}
