// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A Resource Classifier Configuration is a configuration for a resource classifier.
 */
export class ResourceClassifierConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ResourceClassifierConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceClassifierConfigurationState, opts?: pulumi.CustomResourceOptions): ResourceClassifierConfiguration {
        return new ResourceClassifierConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'formal:index/resourceClassifierConfiguration:ResourceClassifierConfiguration';

    /**
     * Returns true if the given object is an instance of ResourceClassifierConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceClassifierConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceClassifierConfiguration.__pulumiType;
    }

    /**
     * The timestamp of the Resource Classifier Preference creation.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<number>;
    /**
     * The preference. Supported values are `nlp`, `llm`, `both`, and `none`.
     */
    public readonly preference!: pulumi.Output<string>;
    /**
     * The ID of the Resource.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * The timestamp of the Resource Classifier Preference update.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<number>;

    /**
     * Create a ResourceClassifierConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceClassifierConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceClassifierConfigurationArgs | ResourceClassifierConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceClassifierConfigurationState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["preference"] = state ? state.preference : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ResourceClassifierConfigurationArgs | undefined;
            if ((!args || args.preference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preference'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            resourceInputs["preference"] = args ? args.preference : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceClassifierConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceClassifierConfiguration resources.
 */
export interface ResourceClassifierConfigurationState {
    /**
     * The timestamp of the Resource Classifier Preference creation.
     */
    createdAt?: pulumi.Input<number>;
    /**
     * The preference. Supported values are `nlp`, `llm`, `both`, and `none`.
     */
    preference?: pulumi.Input<string>;
    /**
     * The ID of the Resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The timestamp of the Resource Classifier Preference update.
     */
    updatedAt?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ResourceClassifierConfiguration resource.
 */
export interface ResourceClassifierConfigurationArgs {
    /**
     * The preference. Supported values are `nlp`, `llm`, `both`, and `none`.
     */
    preference: pulumi.Input<string>;
    /**
     * The ID of the Resource.
     */
    resourceId: pulumi.Input<string>;
}
