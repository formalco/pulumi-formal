// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Registering a Cloud integration.
 */
export class IntegrationCloud extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationCloud resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationCloudState, opts?: pulumi.CustomResourceOptions): IntegrationCloud {
        return new IntegrationCloud(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'formal:index/integrationCloud:IntegrationCloud';

    /**
     * Returns true if the given object is an instance of IntegrationCloud.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationCloud {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationCloud.__pulumiType;
    }

    /**
     * Configuration block for AWS integration.
     */
    public readonly aws!: pulumi.Output<outputs.IntegrationCloudAws | undefined>;
    /**
     * Whether AWS S3 access is allowed or not.
     */
    public /*out*/ readonly awsAllowS3Access!: pulumi.Output<boolean>;
    /**
     * Whether AWS EC2 autodiscovery is enabled or not.
     */
    public /*out*/ readonly awsEnableEc2Autodiscovery!: pulumi.Output<boolean>;
    /**
     * Whether AWS ECS autodiscovery is enabled or not.
     */
    public /*out*/ readonly awsEnableEcsAutodiscovery!: pulumi.Output<boolean>;
    /**
     * Whether AWS EKS autodiscovery is enabled or not.
     */
    public /*out*/ readonly awsEnableEksAutodiscovery!: pulumi.Output<boolean>;
    /**
     * Whether AWS RDS autodiscovery is enabled or not.
     */
    public /*out*/ readonly awsEnableRdsAutodiscovery!: pulumi.Output<boolean>;
    /**
     * Whether AWS Redshift autodiscovery is enabled or not.
     */
    public /*out*/ readonly awsEnableRedshiftAutodiscovery!: pulumi.Output<boolean>;
    /**
     * The IAM role ID Formal will use to access your resources.
     */
    public /*out*/ readonly awsFormalIamRole!: pulumi.Output<string>;
    /**
     * The SNS topic ARN CloudFormation can use to send events to Formal.
     */
    public /*out*/ readonly awsFormalPingbackArn!: pulumi.Output<string>;
    /**
     * A generated name for your CloudFormation stack.
     */
    public /*out*/ readonly awsFormalStackName!: pulumi.Output<string>;
    /**
     * The AWS S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations, if it is allowed to access S3.
     */
    public /*out*/ readonly awsS3BucketArn!: pulumi.Output<string>;
    /**
     * The template body of the CloudFormation stack.
     */
    public /*out*/ readonly awsTemplateBody!: pulumi.Output<string>;
    /**
     * Region of the cloud provider.
     */
    public readonly cloudRegion!: pulumi.Output<string>;
    /**
     * Name of the Integration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Type of the Integration. (Supported: aws)
     *
     * @deprecated This field is deprecated and will be removed in a future version.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a IntegrationCloud resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationCloudArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationCloudArgs | IntegrationCloudState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationCloudState | undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["awsAllowS3Access"] = state ? state.awsAllowS3Access : undefined;
            resourceInputs["awsEnableEc2Autodiscovery"] = state ? state.awsEnableEc2Autodiscovery : undefined;
            resourceInputs["awsEnableEcsAutodiscovery"] = state ? state.awsEnableEcsAutodiscovery : undefined;
            resourceInputs["awsEnableEksAutodiscovery"] = state ? state.awsEnableEksAutodiscovery : undefined;
            resourceInputs["awsEnableRdsAutodiscovery"] = state ? state.awsEnableRdsAutodiscovery : undefined;
            resourceInputs["awsEnableRedshiftAutodiscovery"] = state ? state.awsEnableRedshiftAutodiscovery : undefined;
            resourceInputs["awsFormalIamRole"] = state ? state.awsFormalIamRole : undefined;
            resourceInputs["awsFormalPingbackArn"] = state ? state.awsFormalPingbackArn : undefined;
            resourceInputs["awsFormalStackName"] = state ? state.awsFormalStackName : undefined;
            resourceInputs["awsS3BucketArn"] = state ? state.awsS3BucketArn : undefined;
            resourceInputs["awsTemplateBody"] = state ? state.awsTemplateBody : undefined;
            resourceInputs["cloudRegion"] = state ? state.cloudRegion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as IntegrationCloudArgs | undefined;
            if ((!args || args.cloudRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudRegion'");
            }
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["cloudRegion"] = args ? args.cloudRegion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["awsAllowS3Access"] = undefined /*out*/;
            resourceInputs["awsEnableEc2Autodiscovery"] = undefined /*out*/;
            resourceInputs["awsEnableEcsAutodiscovery"] = undefined /*out*/;
            resourceInputs["awsEnableEksAutodiscovery"] = undefined /*out*/;
            resourceInputs["awsEnableRdsAutodiscovery"] = undefined /*out*/;
            resourceInputs["awsEnableRedshiftAutodiscovery"] = undefined /*out*/;
            resourceInputs["awsFormalIamRole"] = undefined /*out*/;
            resourceInputs["awsFormalPingbackArn"] = undefined /*out*/;
            resourceInputs["awsFormalStackName"] = undefined /*out*/;
            resourceInputs["awsS3BucketArn"] = undefined /*out*/;
            resourceInputs["awsTemplateBody"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationCloud.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationCloud resources.
 */
export interface IntegrationCloudState {
    /**
     * Configuration block for AWS integration.
     */
    aws?: pulumi.Input<inputs.IntegrationCloudAws>;
    /**
     * Whether AWS S3 access is allowed or not.
     */
    awsAllowS3Access?: pulumi.Input<boolean>;
    /**
     * Whether AWS EC2 autodiscovery is enabled or not.
     */
    awsEnableEc2Autodiscovery?: pulumi.Input<boolean>;
    /**
     * Whether AWS ECS autodiscovery is enabled or not.
     */
    awsEnableEcsAutodiscovery?: pulumi.Input<boolean>;
    /**
     * Whether AWS EKS autodiscovery is enabled or not.
     */
    awsEnableEksAutodiscovery?: pulumi.Input<boolean>;
    /**
     * Whether AWS RDS autodiscovery is enabled or not.
     */
    awsEnableRdsAutodiscovery?: pulumi.Input<boolean>;
    /**
     * Whether AWS Redshift autodiscovery is enabled or not.
     */
    awsEnableRedshiftAutodiscovery?: pulumi.Input<boolean>;
    /**
     * The IAM role ID Formal will use to access your resources.
     */
    awsFormalIamRole?: pulumi.Input<string>;
    /**
     * The SNS topic ARN CloudFormation can use to send events to Formal.
     */
    awsFormalPingbackArn?: pulumi.Input<string>;
    /**
     * A generated name for your CloudFormation stack.
     */
    awsFormalStackName?: pulumi.Input<string>;
    /**
     * The AWS S3 bucket ARN this Cloud Integration is allowed to use for Log Integrations, if it is allowed to access S3.
     */
    awsS3BucketArn?: pulumi.Input<string>;
    /**
     * The template body of the CloudFormation stack.
     */
    awsTemplateBody?: pulumi.Input<string>;
    /**
     * Region of the cloud provider.
     */
    cloudRegion?: pulumi.Input<string>;
    /**
     * Name of the Integration.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the Integration. (Supported: aws)
     *
     * @deprecated This field is deprecated and will be removed in a future version.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationCloud resource.
 */
export interface IntegrationCloudArgs {
    /**
     * Configuration block for AWS integration.
     */
    aws?: pulumi.Input<inputs.IntegrationCloudAws>;
    /**
     * Region of the cloud provider.
     */
    cloudRegion: pulumi.Input<string>;
    /**
     * Name of the Integration.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the Integration. (Supported: aws)
     *
     * @deprecated This field is deprecated and will be removed in a future version.
     */
    type?: pulumi.Input<string>;
}
