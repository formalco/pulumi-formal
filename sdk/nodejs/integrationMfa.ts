// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Registering a Integration MFA app.
 */
export class IntegrationMfa extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationMfa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationMfaState, opts?: pulumi.CustomResourceOptions): IntegrationMfa {
        return new IntegrationMfa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'formal:index/integrationMfa:IntegrationMfa';

    /**
     * Returns true if the given object is an instance of IntegrationMfa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationMfa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationMfa.__pulumiType;
    }

    /**
     * Configuration block for Duo integration. This block is optional and may be omitted if not configuring a Duo integration.
     */
    public readonly duo!: pulumi.Output<outputs.IntegrationMfaDuo | undefined>;
    /**
     * Name of the Integration
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * If set to true, this Integration MFA cannot be deleted.
     */
    public readonly terminationProtection!: pulumi.Output<boolean | undefined>;

    /**
     * Create a IntegrationMfa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IntegrationMfaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationMfaArgs | IntegrationMfaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationMfaState | undefined;
            resourceInputs["duo"] = state ? state.duo : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["terminationProtection"] = state ? state.terminationProtection : undefined;
        } else {
            const args = argsOrState as IntegrationMfaArgs | undefined;
            resourceInputs["duo"] = args ? args.duo : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["terminationProtection"] = args ? args.terminationProtection : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationMfa.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationMfa resources.
 */
export interface IntegrationMfaState {
    /**
     * Configuration block for Duo integration. This block is optional and may be omitted if not configuring a Duo integration.
     */
    duo?: pulumi.Input<inputs.IntegrationMfaDuo>;
    /**
     * Name of the Integration
     */
    name?: pulumi.Input<string>;
    /**
     * If set to true, this Integration MFA cannot be deleted.
     */
    terminationProtection?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a IntegrationMfa resource.
 */
export interface IntegrationMfaArgs {
    /**
     * Configuration block for Duo integration. This block is optional and may be omitted if not configuring a Duo integration.
     */
    duo?: pulumi.Input<inputs.IntegrationMfaDuo>;
    /**
     * Name of the Integration
     */
    name?: pulumi.Input<string>;
    /**
     * If set to true, this Integration MFA cannot be deleted.
     */
    terminationProtection?: pulumi.Input<boolean>;
}
