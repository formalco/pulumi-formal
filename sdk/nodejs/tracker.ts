// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creating a Tracker in Formal.
 */
export class Tracker extends pulumi.CustomResource {
    /**
     * Get an existing Tracker resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrackerState, opts?: pulumi.CustomResourceOptions): Tracker {
        return new Tracker(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'formal:index/tracker:Tracker';

    /**
     * Returns true if the given object is an instance of Tracker.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tracker {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tracker.__pulumiType;
    }

    /**
     * If set to true, this Tracker allow clear text value.
     */
    public readonly allowClearTextValue!: pulumi.Output<boolean | undefined>;
    /**
     * When the policy was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Path associated with this tracker.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * Tracker linked to the following resource id.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * If set to true, this Tracker cannot be deleted.
     */
    public readonly terminationProtection!: pulumi.Output<boolean | undefined>;
    /**
     * Last update time.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Tracker resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrackerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrackerArgs | TrackerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrackerState | undefined;
            resourceInputs["allowClearTextValue"] = state ? state.allowClearTextValue : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["terminationProtection"] = state ? state.terminationProtection : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as TrackerArgs | undefined;
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            resourceInputs["allowClearTextValue"] = args ? args.allowClearTextValue : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["terminationProtection"] = args ? args.terminationProtection : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tracker.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Tracker resources.
 */
export interface TrackerState {
    /**
     * If set to true, this Tracker allow clear text value.
     */
    allowClearTextValue?: pulumi.Input<boolean>;
    /**
     * When the policy was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Path associated with this tracker.
     */
    path?: pulumi.Input<string>;
    /**
     * Tracker linked to the following resource id.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * If set to true, this Tracker cannot be deleted.
     */
    terminationProtection?: pulumi.Input<boolean>;
    /**
     * Last update time.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Tracker resource.
 */
export interface TrackerArgs {
    /**
     * If set to true, this Tracker allow clear text value.
     */
    allowClearTextValue?: pulumi.Input<boolean>;
    /**
     * Path associated with this tracker.
     */
    path: pulumi.Input<string>;
    /**
     * Tracker linked to the following resource id.
     */
    resourceId: pulumi.Input<string>;
    /**
     * If set to true, this Tracker cannot be deleted.
     */
    terminationProtection?: pulumi.Input<boolean>;
}
