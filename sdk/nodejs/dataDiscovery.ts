// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Registering a Data Discovery with Formal.
 */
export class DataDiscovery extends pulumi.CustomResource {
    /**
     * Get an existing DataDiscovery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataDiscoveryState, opts?: pulumi.CustomResourceOptions): DataDiscovery {
        return new DataDiscovery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'formal:index/dataDiscovery:DataDiscovery';

    /**
     * Returns true if the given object is an instance of DataDiscovery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataDiscovery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataDiscovery.__pulumiType;
    }

    /**
     * Creation time of the Data Discovery.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<number>;
    /**
     * Deletion policy of the Data Discovery. Possible values: `delete`, `markForDeletion`.
     */
    public readonly deletionPolicy!: pulumi.Output<string>;
    /**
     * Native user ID linked to this Data Discovery.
     */
    public readonly nativeUserId!: pulumi.Output<string>;
    /**
     * Path of the inventory object.
     */
    public readonly path!: pulumi.Output<string | undefined>;
    /**
     * Resource ID linked to this Data Discovery.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * Schedule at which the Data Discovery will be executed. Possible values: `6h`, `12h`, `18h`, `24h` or a valid cron expression, for example `0 4,16 * * *` to run daily at 04:00 and 16:00 UTC.
     */
    public readonly schedule!: pulumi.Output<string>;

    /**
     * Create a DataDiscovery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataDiscoveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataDiscoveryArgs | DataDiscoveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataDiscoveryState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["nativeUserId"] = state ? state.nativeUserId : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
        } else {
            const args = argsOrState as DataDiscoveryArgs | undefined;
            if ((!args || args.deletionPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deletionPolicy'");
            }
            if ((!args || args.nativeUserId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nativeUserId'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["nativeUserId"] = args ? args.nativeUserId : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataDiscovery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataDiscovery resources.
 */
export interface DataDiscoveryState {
    /**
     * Creation time of the Data Discovery.
     */
    createdAt?: pulumi.Input<number>;
    /**
     * Deletion policy of the Data Discovery. Possible values: `delete`, `markForDeletion`.
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * Native user ID linked to this Data Discovery.
     */
    nativeUserId?: pulumi.Input<string>;
    /**
     * Path of the inventory object.
     */
    path?: pulumi.Input<string>;
    /**
     * Resource ID linked to this Data Discovery.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Schedule at which the Data Discovery will be executed. Possible values: `6h`, `12h`, `18h`, `24h` or a valid cron expression, for example `0 4,16 * * *` to run daily at 04:00 and 16:00 UTC.
     */
    schedule?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataDiscovery resource.
 */
export interface DataDiscoveryArgs {
    /**
     * Deletion policy of the Data Discovery. Possible values: `delete`, `markForDeletion`.
     */
    deletionPolicy: pulumi.Input<string>;
    /**
     * Native user ID linked to this Data Discovery.
     */
    nativeUserId: pulumi.Input<string>;
    /**
     * Path of the inventory object.
     */
    path?: pulumi.Input<string>;
    /**
     * Resource ID linked to this Data Discovery.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Schedule at which the Data Discovery will be executed. Possible values: `6h`, `12h`, `18h`, `24h` or a valid cron expression, for example `0 4,16 * * *` to run daily at 04:00 and 16:00 UTC.
     */
    schedule: pulumi.Input<string>;
}
